{
    "scope": "source.lua - support.function.library.gideros",

      "completions":
        [

{ "trigger": "and", "contents": "and"},
{ "trigger": "break", "contents": "break"},
{ "trigger": "do", "contents": "do"},
{ "trigger": "else", "contents": "else"},
{ "trigger": "elseif", "contents": "elseif"},
{ "trigger": "end", "contents": "end"},
{ "trigger": "false", "contents": "false"},
{ "trigger": "for", "contents": "for"},
{ "trigger": "function", "contents": "function"},
{ "trigger": "if", "contents": "if"},
{ "trigger": "in", "contents": "in"},
{ "trigger": "local", "contents": "local"},
{ "trigger": "nil", "contents": "nil"},
{ "trigger": "not", "contents": "not"},
{ "trigger": "or", "contents": "or"},
{ "trigger": "repeat", "contents": "repeat"},
{ "trigger": "return", "contents": "return"},
{ "trigger": "then", "contents": "then"},
{ "trigger": "true", "contents": "true"},
{ "trigger": "until", "contents": "until"},
{ "trigger": "while", "contents": "while"},
{ "trigger": "assert", "contents": "assert(${1:v}, ${2:[message]})"},
{ "trigger": "collectgarbage", "contents": "collectgarbage(${1:opt}, ${2:[arg]})"},
{ "trigger": "dofile", "contents": "dofile(${1:filename})"},
{ "trigger": "error", "contents": "error(${1:message}, ${2:[level]})"},
{ "trigger": "getfenv", "contents": "getfenv(${1:f})"},
{ "trigger": "getmetatable", "contents": "getmetatable(${1:object})"},
{ "trigger": "ipairs", "contents": "ipairs(${1:t})"},
{ "trigger": "loadfile", "contents": "loadfile(${1:filename})"},
{ "trigger": "loadstring", "contents": "loadstring(${1:string}, ${2:[chunkname]})"},
{ "trigger": "next", "contents": "next(${1:table}, ${2:[index]})"},
{ "trigger": "pairs", "contents": "pairs(${1:t})"},
{ "trigger": "pcall", "contents": "pcall(${1:f}, ${2:arg1}, ${3:arg2}, ${4:...})"},
{ "trigger": "print", "contents": "print(${1:e1}, ${2:e2}, ${3:...})"},
{ "trigger": "rawequal", "contents": "rawequal(${1:v1}, ${2:v2})"},
{ "trigger": "rawget", "contents": "rawget(${1:table}, ${2:index})"},
{ "trigger": "rawset", "contents": "rawset(${1:table}, ${2:index}, ${3:value})"},
{ "trigger": "require", "contents": "require(${1:packagename})"},
{ "trigger": "setfenv", "contents": "setfenv(${1:f}, ${2:table})"},
{ "trigger": "setmetatable", "contents": "setmetatable(${1:table}, ${2:metatable})"},
{ "trigger": "tonumber", "contents": "tonumber(${1:e}, ${2:[base]})"},
{ "trigger": "tostring", "contents": "tostring(${1:e})"},
{ "trigger": "type", "contents": "type(${1:v})"},
{ "trigger": "unpack", "contents": "unpack(${1:list})"},
{ "trigger": "xpcall", "contents": "xpcall(${1:f}, ${2:err})"},
{ "trigger": "_G", "contents": "_G"},
{ "trigger": "_VERSION", "contents": "_VERSION"},
{ "trigger": "Accelerometer", "contents": "Accelerometer"},
{ "trigger": "Accelerometer.isAvailable", "contents": "Accelerometer.isAvailable()"},
{ "trigger": "Accelerometer.new", "contents": "Accelerometer.new()"},
{ "trigger": "getAcceleration", "contents": "getAcceleration()"},
{ "trigger": "start", "contents": "start()"},
{ "trigger": "stop", "contents": "stop()"},
{ "trigger": "AlertDialog", "contents": "AlertDialog"},
{ "trigger": "AlertDialog.new", "contents": "AlertDialog.new(${1:title}, ${2:message}, ${3:cancelButton}, ${4:[button1]}, ${5:[button2]})"},
{ "trigger": "hide", "contents": "hide()"},
{ "trigger": "show", "contents": "show()"},
{ "trigger": "Application", "contents": "Application"},
{ "trigger": "application", "contents": "application"},
{ "trigger": "canOpenUrl", "contents": "canOpenUrl(${1:url})"},
{ "trigger": "exit", "contents": "exit()"},
{ "trigger": "getApiVersion", "contents": "getApiVersion()"},
{ "trigger": "getBackgroundColor", "contents": "getBackgroundColor()"},
{ "trigger": "getContentHeight", "contents": "getContentHeight()"},
{ "trigger": "getContentWidth", "contents": "getContentWidth()"},
{ "trigger": "getDeviceHeight", "contents": "getDeviceHeight()"},
{ "trigger": "getDeviceInfo", "contents": "getDeviceInfo()"},
{ "trigger": "getDeviceWidth", "contents": "getDeviceWidth()"},
{ "trigger": "getFps", "contents": "getFps()"},
{ "trigger": "getLanguage", "contents": "getLanguage()"},
{ "trigger": "getLocale", "contents": "getLocale()"},
{ "trigger": "getLogicalHeight", "contents": "getLogicalHeight()"},
{ "trigger": "getLogicalScaleX", "contents": "getLogicalScaleX()"},
{ "trigger": "getLogicalScaleY", "contents": "getLogicalScaleY()"},
{ "trigger": "getLogicalTranslateX", "contents": "getLogicalTranslateX()"},
{ "trigger": "getLogicalTranslateY", "contents": "getLogicalTranslateY()"},
{ "trigger": "getLogicalWidth", "contents": "getLogicalWidth()"},
{ "trigger": "getOrientation", "contents": "getOrientation()"},
{ "trigger": "getScaleMode", "contents": "getScaleMode()"},
{ "trigger": "getScreenDensity", "contents": "getScreenDensity()"},
{ "trigger": "getTextureMemoryUsage", "contents": "getTextureMemoryUsage()"},
{ "trigger": "openUrl", "contents": "openUrl(${1:url})"},
{ "trigger": "setBackgroundColor", "contents": "setBackgroundColor(${1:color})"},
{ "trigger": "setFps", "contents": "setFps(${1:fps})"},
{ "trigger": "setKeepAwake", "contents": "setKeepAwake(${1:keepAwake})"},
{ "trigger": "setLogicalDimensions", "contents": "setLogicalDimensions(${1:width}, ${2:height})"},
{ "trigger": "setOrientation", "contents": "setOrientation(${1:orientation})"},
{ "trigger": "setScaleMode", "contents": "setScaleMode(${1:scaleMode})"},
{ "trigger": "vibrate", "contents": "vibrate()"},
{ "trigger": "Application.LANDSCAPE_LEFT", "contents": "Application.LANDSCAPE_LEFT"},
{ "trigger": "Application.LANDSCAPE_RIGHT", "contents": "Application.LANDSCAPE_RIGHT"},
{ "trigger": "Application.PORTRAIT", "contents": "Application.PORTRAIT"},
{ "trigger": "Application.PORTRAIT_UPSIDE_DOWN", "contents": "Application.PORTRAIT_UPSIDE_DOWN"},
{ "trigger": "b2", "contents": "b2"},
{ "trigger": "b2.createDistanceJointDef", "contents": "b2.createDistanceJointDef(${1:bodyA}, ${2:bodyB}, ${3:anchorAx}, ${4:anchorAy}, ${5:anchorBx}, ${6:anchorBy})"},
{ "trigger": "b2.createFrictionJointDef", "contents": "b2.createFrictionJointDef(${1:bodyA}, ${2:bodyB}, ${3:anchorx}, ${4:anchory})"},
{ "trigger": "b2.createGearJointDef", "contents": "b2.createGearJointDef(${1:bodyA}, ${2:bodyB}, ${3:joint1}, ${4:joint2}, ${5:ratio})"},
{ "trigger": "b2.createMouseJointDef", "contents": "b2.createMouseJointDef(${1:bodyA}, ${2:bodyB}, ${3:targetx}, ${4:targety}, ${5:maxForce}, ${6:frequencyHz}, ${7:dampingRatio})"},
{ "trigger": "b2.createPrismaticJointDef", "contents": "b2.createPrismaticJointDef(${1:bodyA}, ${2:bodyB}, ${3:anchorx}, ${4:anchory}, ${5:axisx}, ${6:axisy})"},
{ "trigger": "b2.createPulleyJointDef", "contents": "b2.createPulleyJointDef(${1:bodyA}, ${2:bodyB}, ${3:groundAnchorAx}, ${4:groundAnchorAy}, ${5:groundAnchorBx}, ${6:groundAnchorBy}, ${7:anchorAx}, ${8:anchorAy}, ${9:anchorBx}, ${10:anchorBy}, ${11:ratio})"},
{ "trigger": "b2.createRevoluteJointDef", "contents": "b2.createRevoluteJointDef(${1:bodyA}, ${2:bodyB}, ${3:anchorx}, ${4:anchory})"},
{ "trigger": "b2.createRopeJointDef", "contents": "b2.createRopeJointDef(${1:bodyA}, ${2:bodyB}, ${3:anchorAx}, ${4:anchorAy}, ${5:anchorBx}, ${6:anchorBy}, ${7:maxLength})"},
{ "trigger": "b2.createWeldJointDef", "contents": "b2.createWeldJointDef(${1:bodyA}, ${2:bodyB}, ${3:anchorAx}, ${4:anchorAy}, ${5:anchorBx}, ${6:anchorBy})"},
{ "trigger": "b2.createWheelJointDef", "contents": "b2.createWheelJointDef(${1:bodyA}, ${2:bodyB}, ${3:anchorx}, ${4:anchory}, ${5:axisx}, ${6:axisy})"},
{ "trigger": "b2.getScale", "contents": "b2.getScale()"},
{ "trigger": "b2.setScale", "contents": "b2.setScale(${1:scale})"},
{ "trigger": "b2.DISTANCE_JOINT", "contents": "b2.DISTANCE_JOINT"},
{ "trigger": "b2.DYNAMIC_BODY", "contents": "b2.DYNAMIC_BODY"},
{ "trigger": "b2.FRICTION_JOINT", "contents": "b2.FRICTION_JOINT"},
{ "trigger": "b2.GEAR_JOINT", "contents": "b2.GEAR_JOINT"},
{ "trigger": "b2.KINEMATIC_BODY", "contents": "b2.KINEMATIC_BODY"},
{ "trigger": "b2.MOUSE_JOINT", "contents": "b2.MOUSE_JOINT"},
{ "trigger": "b2.PRISMATIC_JOINT", "contents": "b2.PRISMATIC_JOINT"},
{ "trigger": "b2.PULLEY_JOINT", "contents": "b2.PULLEY_JOINT"},
{ "trigger": "b2.REVOLUTE_JOINT", "contents": "b2.REVOLUTE_JOINT"},
{ "trigger": "b2.ROPE_JOINT", "contents": "b2.ROPE_JOINT"},
{ "trigger": "b2.STATIC_BODY", "contents": "b2.STATIC_BODY"},
{ "trigger": "b2.WELD_JOINT", "contents": "b2.WELD_JOINT"},
{ "trigger": "b2.WHEEL_JOINT", "contents": "b2.WHEEL_JOINT"},
{ "trigger": "b2.Body", "contents": "b2.Body"},
{ "trigger": "b2.body", "contents": "b2.body"},
{ "trigger": "applyAngularImpulse", "contents": "applyAngularImpulse(${1:impulse})"},
{ "trigger": "applyForce", "contents": "applyForce(${1:forcex}, ${2:forcey}, ${3:pointx}, ${4:pointy})"},
{ "trigger": "applyLinearImpulse", "contents": "applyLinearImpulse(${1:impulsex}, ${2:impulsey}, ${3:pointx}, ${4:pointy})"},
{ "trigger": "applyTorque", "contents": "applyTorque(${1:torque})"},
{ "trigger": "createFixture", "contents": "createFixture(${1:fixtureDef})"},
{ "trigger": "destroyFixture", "contents": "destroyFixture(${1:fixture})"},
{ "trigger": "getAngle", "contents": "getAngle()"},
{ "trigger": "getAngularDamping", "contents": "getAngularDamping()"},
{ "trigger": "getAngularVelocity", "contents": "getAngularVelocity()"},
{ "trigger": "getGravityScale", "contents": "getGravityScale()"},
{ "trigger": "getInertia", "contents": "getInertia()"},
{ "trigger": "getLinearDamping", "contents": "getLinearDamping()"},
{ "trigger": "getLinearVelocity", "contents": "getLinearVelocity()"},
{ "trigger": "getLocalCenter", "contents": "getLocalCenter()"},
{ "trigger": "getLocalPoint", "contents": "getLocalPoint(${1:x}, ${2:y})"},
{ "trigger": "getLocalVector", "contents": "getLocalVector(${1:x}, ${2:y})"},
{ "trigger": "getMass", "contents": "getMass()"},
{ "trigger": "getPosition", "contents": "getPosition()"},
{ "trigger": "getWorldCenter", "contents": "getWorldCenter()"},
{ "trigger": "getWorldPoint", "contents": "getWorldPoint(${1:x}, ${2:y})"},
{ "trigger": "getWorldVector", "contents": "getWorldVector(${1:x}, ${2:y})"},
{ "trigger": "isActive", "contents": "isActive()"},
{ "trigger": "isAwake", "contents": "isAwake()"},
{ "trigger": "isBullet", "contents": "isBullet()"},
{ "trigger": "isFixedRotation", "contents": "isFixedRotation()"},
{ "trigger": "isSleepingAllowed", "contents": "isSleepingAllowed()"},
{ "trigger": "setActive", "contents": "setActive(${1:flag})"},
{ "trigger": "setAngle", "contents": "setAngle(${1:angle})"},
{ "trigger": "setAngularDamping", "contents": "setAngularDamping(${1:angularDamping})"},
{ "trigger": "setAngularVelocity", "contents": "setAngularVelocity(${1:omega})"},
{ "trigger": "setAwake", "contents": "setAwake(${1:awake})"},
{ "trigger": "setBullet", "contents": "setBullet(${1:flag})"},
{ "trigger": "setFixedRotation", "contents": "setFixedRotation(${1:flag})"},
{ "trigger": "setGravityScale", "contents": "setGravityScale(${1:scale})"},
{ "trigger": "setLinearDamping", "contents": "setLinearDamping(${1:linearDamping})"},
{ "trigger": "setLinearVelocity", "contents": "setLinearVelocity(${1:x}, ${2:y})"},
{ "trigger": "setPosition", "contents": "setPosition(${1:x}, ${2:y})"},
{ "trigger": "setSleepingAllowed", "contents": "setSleepingAllowed(${1:flag})"},
{ "trigger": "b2.ChainShape", "contents": "b2.ChainShape"},
{ "trigger": "b2.ChainShape.new", "contents": "b2.ChainShape.new()"},
{ "trigger": "createChain", "contents": "createChain(${1:vertices})"},
{ "trigger": "createLoop", "contents": "createLoop(${1:vertices})"},
{ "trigger": "b2.CircleShape", "contents": "b2.CircleShape"},
{ "trigger": "b2.CircleShape.new", "contents": "b2.CircleShape.new(${1:centerx}, ${2:centery}, ${3:radius})"},
{ "trigger": "set", "contents": "set(${1:centerx}, ${2:centery}, ${3:radius})"},
{ "trigger": "b2.Contact", "contents": "b2.Contact"},
{ "trigger": "b2.contact", "contents": "b2.contact"},
{ "trigger": "getChildIndexA", "contents": "getChildIndexA()"},
{ "trigger": "getChildIndexB", "contents": "getChildIndexB()"},
{ "trigger": "getFixtureA", "contents": "getFixtureA()"},
{ "trigger": "getFixtureB", "contents": "getFixtureB()"},
{ "trigger": "getFriction", "contents": "getFriction()"},
{ "trigger": "getManifold", "contents": "getManifold()"},
{ "trigger": "getRestitution", "contents": "getRestitution()"},
{ "trigger": "getWorldManifold", "contents": "getWorldManifold()"},
{ "trigger": "isTouching", "contents": "isTouching()"},
{ "trigger": "resetFriction", "contents": "resetFriction()"},
{ "trigger": "resetRestitution", "contents": "resetRestitution()"},
{ "trigger": "setEnabled", "contents": "setEnabled(${1:flag})"},
{ "trigger": "setFriction", "contents": "setFriction(${1:friction})"},
{ "trigger": "setRestitution", "contents": "setRestitution(${1:restitution})"},
{ "trigger": "b2.DebugDraw", "contents": "b2.DebugDraw"},
{ "trigger": "b2.DebugDraw.new", "contents": "b2.DebugDraw.new()"},
{ "trigger": "appendFlags", "contents": "appendFlags(${1:flags})"},
{ "trigger": "clearFlags", "contents": "clearFlags(${1:flags})"},
{ "trigger": "getFlags", "contents": "getFlags()"},
{ "trigger": "setFlags", "contents": "setFlags(${1:flags})"},
{ "trigger": "b2.DebugDraw.AABB_BIT", "contents": "b2.DebugDraw.AABB_BIT"},
{ "trigger": "b2.DebugDraw.CENTER_OF_MASS_BIT", "contents": "b2.DebugDraw.CENTER_OF_MASS_BIT"},
{ "trigger": "b2.DebugDraw.JOINT_BIT", "contents": "b2.DebugDraw.JOINT_BIT"},
{ "trigger": "b2.DebugDraw.PAIR_BIT", "contents": "b2.DebugDraw.PAIR_BIT"},
{ "trigger": "b2.DebugDraw.SHAPE_BIT", "contents": "b2.DebugDraw.SHAPE_BIT"},
{ "trigger": "b2.DistanceJoint", "contents": "b2.DistanceJoint"},
{ "trigger": "b2.distancejoint", "contents": "b2.distancejoint"},
{ "trigger": "getDampingRatio", "contents": "getDampingRatio()"},
{ "trigger": "getFrequency", "contents": "getFrequency()"},
{ "trigger": "getLength", "contents": "getLength()"},
{ "trigger": "setDampingRatio", "contents": "setDampingRatio(${1:ratio})"},
{ "trigger": "setFrequency", "contents": "setFrequency(${1:frequency})"},
{ "trigger": "setLength", "contents": "setLength(${1:length})"},
{ "trigger": "b2.EdgeShape", "contents": "b2.EdgeShape"},
{ "trigger": "b2.EdgeShape.new", "contents": "b2.EdgeShape.new(${1:v1x}, ${2:v1y}, ${3:v2x}, ${4:v2y})"},
{ "trigger": "set", "contents": "set(${1:v1x}, ${2:v1y}, ${3:v2x}, ${4:v2y})"},
{ "trigger": "b2.Fixture", "contents": "b2.Fixture"},
{ "trigger": "b2.fixture", "contents": "b2.fixture"},
{ "trigger": "getBody", "contents": "getBody()"},
{ "trigger": "getFilterData", "contents": "getFilterData()"},
{ "trigger": "isSensor", "contents": "isSensor()"},
{ "trigger": "setFilterData", "contents": "setFilterData(${1:filterData})"},
{ "trigger": "setSensor", "contents": "setSensor(${1:sensor})"},
{ "trigger": "b2.FrictionJoint", "contents": "b2.FrictionJoint"},
{ "trigger": "b2.frictionjoint", "contents": "b2.frictionjoint"},
{ "trigger": "getMaxForce", "contents": "getMaxForce()"},
{ "trigger": "getMaxTorque", "contents": "getMaxTorque()"},
{ "trigger": "setMaxForce", "contents": "setMaxForce(${1:force})"},
{ "trigger": "setMaxTorque", "contents": "setMaxTorque(${1:torque})"},
{ "trigger": "b2.GearJoint", "contents": "b2.GearJoint"},
{ "trigger": "b2.gearjoint", "contents": "b2.gearjoint"},
{ "trigger": "getRatio", "contents": "getRatio()"},
{ "trigger": "setRatio", "contents": "setRatio(${1:ratio})"},
{ "trigger": "b2.Joint", "contents": "b2.Joint"},
{ "trigger": "b2.joint", "contents": "b2.joint"},
{ "trigger": "getAnchorA", "contents": "getAnchorA()"},
{ "trigger": "getAnchorB", "contents": "getAnchorB()"},
{ "trigger": "getBodyA", "contents": "getBodyA()"},
{ "trigger": "getBodyB", "contents": "getBodyB()"},
{ "trigger": "getReactionForce", "contents": "getReactionForce(${1:inv_dt})"},
{ "trigger": "getReactionTorque", "contents": "getReactionTorque(${1:inv_dt})"},
{ "trigger": "getType", "contents": "getType()"},
{ "trigger": "isActive", "contents": "isActive()"},
{ "trigger": "b2.MouseJoint", "contents": "b2.MouseJoint"},
{ "trigger": "b2.mousejoint", "contents": "b2.mousejoint"},
{ "trigger": "getDampingRatio", "contents": "getDampingRatio()"},
{ "trigger": "getFrequency", "contents": "getFrequency()"},
{ "trigger": "getMaxForce", "contents": "getMaxForce()"},
{ "trigger": "getTarget", "contents": "getTarget()"},
{ "trigger": "setDampingRatio", "contents": "setDampingRatio(${1:ratio})"},
{ "trigger": "setFrequency", "contents": "setFrequency(${1:frequency})"},
{ "trigger": "setMaxForce", "contents": "setMaxForce(${1:force})"},
{ "trigger": "setTarget", "contents": "setTarget(${1:x}, ${2:y})"},
{ "trigger": "b2.PolygonShape", "contents": "b2.PolygonShape"},
{ "trigger": "b2.PolygonShape.new", "contents": "b2.PolygonShape.new()"},
{ "trigger": "set", "contents": "set(${1:vertices})"},
{ "trigger": "setAsBox", "contents": "setAsBox(${1:hx}, ${2:hy}, ${3:centerx}, ${4:centery}, ${5:angle})"},
{ "trigger": "b2.PrismaticJoint", "contents": "b2.PrismaticJoint"},
{ "trigger": "b2.prismaticjoint", "contents": "b2.prismaticjoint"},
{ "trigger": "enableLimit", "contents": "enableLimit(${1:flag})"},
{ "trigger": "enableMotor", "contents": "enableMotor(${1:flag})"},
{ "trigger": "getJointSpeed", "contents": "getJointSpeed()"},
{ "trigger": "getJointTranslation", "contents": "getJointTranslation()"},
{ "trigger": "getLimits", "contents": "getLimits()"},
{ "trigger": "getMotorSpeed", "contents": "getMotorSpeed()"},
{ "trigger": "isLimitEnabled", "contents": "isLimitEnabled()"},
{ "trigger": "isMotorEnabled", "contents": "isMotorEnabled()"},
{ "trigger": "setLimits", "contents": "setLimits(${1:lower}, ${2:upper})"},
{ "trigger": "setMaxMotorForce", "contents": "setMaxMotorForce(${1:force})"},
{ "trigger": "setMotorSpeed", "contents": "setMotorSpeed(${1:speed})"},
{ "trigger": "getMotorForce", "contents": "getMotorForce(${1:inv_dt})"},
{ "trigger": "b2.PulleyJoint", "contents": "b2.PulleyJoint"},
{ "trigger": "b2.pulleyjoint", "contents": "b2.pulleyjoint"},
{ "trigger": "getGroundAnchorA", "contents": "getGroundAnchorA()"},
{ "trigger": "getGroundAnchorB", "contents": "getGroundAnchorB()"},
{ "trigger": "getLengthA", "contents": "getLengthA()"},
{ "trigger": "getLengthB", "contents": "getLengthB()"},
{ "trigger": "getRatio", "contents": "getRatio()"},
{ "trigger": "b2.RevoluteJoint", "contents": "b2.RevoluteJoint"},
{ "trigger": "b2.revolutejoint", "contents": "b2.revolutejoint"},
{ "trigger": "enableLimit", "contents": "enableLimit(${1:flag})"},
{ "trigger": "enableMotor", "contents": "enableMotor(${1:flag})"},
{ "trigger": "getJointAngle", "contents": "getJointAngle()"},
{ "trigger": "getJointSpeed", "contents": "getJointSpeed()"},
{ "trigger": "getLimits", "contents": "getLimits()"},
{ "trigger": "getMotorSpeed", "contents": "getMotorSpeed()"},
{ "trigger": "getMotorTorque", "contents": "getMotorTorque(${1:inv_dt})"},
{ "trigger": "isLimitEnabled", "contents": "isLimitEnabled()"},
{ "trigger": "isMotorEnabled", "contents": "isMotorEnabled()"},
{ "trigger": "setLimits", "contents": "setLimits(${1:lower}, ${2:upper})"},
{ "trigger": "setMaxMotorTorque", "contents": "setMaxMotorTorque(${1:torque})"},
{ "trigger": "setMotorSpeed", "contents": "setMotorSpeed(${1:speed})"},
{ "trigger": "b2.RopeJoint", "contents": "b2.RopeJoint"},
{ "trigger": "b2.ropejoint", "contents": "b2.ropejoint"},
{ "trigger": "getMaxLength", "contents": "getMaxLength()"},
{ "trigger": "setMaxLength", "contents": "setMaxLength(${1:maxLength})"},
{ "trigger": "b2.Shape", "contents": "b2.Shape"},
{ "trigger": "b2.shape", "contents": "b2.shape"},
{ "trigger": "b2.WeldJoint", "contents": "b2.WeldJoint"},
{ "trigger": "b2.weldjoint", "contents": "b2.weldjoint"},
{ "trigger": "getDampingRatio", "contents": "getDampingRatio()"},
{ "trigger": "getFrequency", "contents": "getFrequency()"},
{ "trigger": "setDampingRatio", "contents": "setDampingRatio(${1:damping})"},
{ "trigger": "setFrequency", "contents": "setFrequency(${1:frequency})"},
{ "trigger": "b2.WheelJoint", "contents": "b2.WheelJoint"},
{ "trigger": "b2.wheeljoint", "contents": "b2.wheeljoint"},
{ "trigger": "enableMotor", "contents": "enableMotor(${1:flag})"},
{ "trigger": "getJointSpeed", "contents": "getJointSpeed()"},
{ "trigger": "getJointTranslation", "contents": "getJointTranslation()"},
{ "trigger": "getMaxMotorTorque", "contents": "getMaxMotorTorque()"},
{ "trigger": "getMotorSpeed", "contents": "getMotorSpeed()"},
{ "trigger": "getSpringDampingRatio", "contents": "getSpringDampingRatio()"},
{ "trigger": "getSpringFrequencyHz", "contents": "getSpringFrequencyHz()"},
{ "trigger": "isMotorEnabled", "contents": "isMotorEnabled()"},
{ "trigger": "setMaxMotorTorque", "contents": "setMaxMotorTorque(${1:torque})"},
{ "trigger": "setMotorSpeed", "contents": "setMotorSpeed(${1:speed})"},
{ "trigger": "setSpringDampingRatio", "contents": "setSpringDampingRatio(${1:damping})"},
{ "trigger": "setSpringFrequencyHz", "contents": "setSpringFrequencyHz(${1:frequency})"},
{ "trigger": "b2.World", "contents": "b2.World"},
{ "trigger": "b2.World.new", "contents": "b2.World.new(${1:gravityx}, ${2:gravityy}, ${3:doSleep})"},
{ "trigger": "clearForces", "contents": "clearForces()"},
{ "trigger": "createBody", "contents": "createBody(${1:bodyDef})"},
{ "trigger": "createJoint", "contents": "createJoint(${1:jointDef})"},
{ "trigger": "destroyBody", "contents": "destroyBody(${1:body})"},
{ "trigger": "destroyJoint", "contents": "destroyJoint(${1:joint})"},
{ "trigger": "getGravity", "contents": "getGravity()"},
{ "trigger": "queryAABB", "contents": "queryAABB(${1:lowerx}, ${2:lowery}, ${3:upperx}, ${4:uppery})"},
{ "trigger": "rayCast", "contents": "rayCast(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:listener}, ${6:[data]})"},
{ "trigger": "setDebugDraw", "contents": "setDebugDraw()"},
{ "trigger": "setGravity", "contents": "setGravity(${1:gravityx}, ${2:gravityy})"},
{ "trigger": "step", "contents": "step(${1:timeStep}, ${2:velocityIterations}, ${3:positionIterations})"},
{ "trigger": "bit", "contents": "bit"},
{ "trigger": "bit.arshift", "contents": "bit.arshift(${1:x}, ${2:n})"},
{ "trigger": "bit.band", "contents": "bit.band(${1:x1}, ${2:[x2]})"},
{ "trigger": "bit.bnot", "contents": "bit.bnot(${1:x})"},
{ "trigger": "bit.bor", "contents": "bit.bor(${1:x1}, ${2:[x2]})"},
{ "trigger": "bit.bswap", "contents": "bit.bswap(${1:x})"},
{ "trigger": "bit.bxor", "contents": "bit.bxor(${1:x1}, ${2:[x2]})"},
{ "trigger": "bit.lshift", "contents": "bit.lshift(${1:x}, ${2:n})"},
{ "trigger": "bit.rol", "contents": "bit.rol(${1:x}, ${2:n})"},
{ "trigger": "bit.ror", "contents": "bit.ror(${1:x}, ${2:n})"},
{ "trigger": "bit.rshift", "contents": "bit.rshift(${1:x}, ${2:n})"},
{ "trigger": "bit.tobit", "contents": "bit.tobit(${1:x})"},
{ "trigger": "bit.tohex", "contents": "bit.tohex(${1:x}, ${2:[n]})"},
{ "trigger": "Bitmap", "contents": "Bitmap"},
{ "trigger": "Bitmap.new", "contents": "Bitmap.new(${1:texture})"},
{ "trigger": "getAnchorPoint", "contents": "getAnchorPoint()"},
{ "trigger": "setAnchorPoint", "contents": "setAnchorPoint(${1:x}, ${2:y})"},
{ "trigger": "setTexture", "contents": "setTexture(${1:texture})"},
{ "trigger": "setTextureRegion", "contents": "setTextureRegion(${1:textureRegion})"},
{ "trigger": "Core", "contents": "Core"},
{ "trigger": "core", "contents": "core"},
{ "trigger": "Core.class", "contents": "Core.class(${1:[base]})"},
{ "trigger": "coroutine", "contents": "coroutine"},
{ "trigger": "coroutine.create", "contents": "coroutine.create(${1:f})"},
{ "trigger": "coroutine.resume", "contents": "coroutine.resume(${1:co}, ${2:val1}, ${3:...})"},
{ "trigger": "coroutine.status", "contents": "coroutine.status(${1:co})"},
{ "trigger": "coroutine.wrap", "contents": "coroutine.wrap(${1:f})"},
{ "trigger": "coroutine.yield", "contents": "coroutine.yield(${1:val1}, ${2:...})"},
{ "trigger": "debug", "contents": "debug"},
{ "trigger": "debug.debug", "contents": "debug.debug()"},
{ "trigger": "debug.gethook", "contents": "debug.gethook()"},
{ "trigger": "debug.getinfo", "contents": "debug.getinfo(${1:function}, ${2:[what]})"},
{ "trigger": "debug.getlocal", "contents": "debug.getlocal(${1:level}, ${2:local})"},
{ "trigger": "debug.getupvalue", "contents": "debug.getupvalue(${1:func}, ${2:up})"},
{ "trigger": "debug.sethook", "contents": "debug.sethook(${1:hook}, ${2:mask}, ${3:[count]})"},
{ "trigger": "debug.setlocal", "contents": "debug.setlocal(${1:level}, ${2:local}, ${3:value})"},
{ "trigger": "debug.setupvalue", "contents": "debug.setupvalue(${1:func}, ${2:up}, ${3:value})"},
{ "trigger": "debug.traceback", "contents": "debug.traceback(${1:message})"},
{ "trigger": "Event", "contents": "Event"},
{ "trigger": "Event.new", "contents": "Event.new(${1:type})"},
{ "trigger": "getTarget", "contents": "getTarget()"},
{ "trigger": "getType", "contents": "getType()"},
{ "trigger": "stopPropagation", "contents": "stopPropagation()"},
{ "trigger": "Event.ADDED_TO_STAGE", "contents": "Event.ADDED_TO_STAGE"},
{ "trigger": "Event.APPLICATION_BACKGROUND", "contents": "Event.APPLICATION_BACKGROUND"},
{ "trigger": "Event.APPLICATION_EXIT", "contents": "Event.APPLICATION_EXIT"},
{ "trigger": "Event.APPLICATION_FOREGROUND", "contents": "Event.APPLICATION_FOREGROUND"},
{ "trigger": "Event.APPLICATION_RESUME", "contents": "Event.APPLICATION_RESUME"},
{ "trigger": "Event.APPLICATION_START", "contents": "Event.APPLICATION_START"},
{ "trigger": "Event.APPLICATION_SUSPEND", "contents": "Event.APPLICATION_SUSPEND"},
{ "trigger": "Event.BANNER_ACTION_BEGIN", "contents": "Event.BANNER_ACTION_BEGIN"},
{ "trigger": "Event.BANNER_ACTION_FINISHED", "contents": "Event.BANNER_ACTION_FINISHED"},
{ "trigger": "Event.BANNER_AD_FAILED", "contents": "Event.BANNER_AD_FAILED"},
{ "trigger": "Event.BANNER_AD_LOADED", "contents": "Event.BANNER_AD_LOADED"},
{ "trigger": "Event.BEGIN_CONTACT", "contents": "Event.BEGIN_CONTACT"},
{ "trigger": "Event.CHECK_BILLING_SUPPORTED_COMPLETE", "contents": "Event.CHECK_BILLING_SUPPORTED_COMPLETE"},
{ "trigger": "Event.COMPLETE", "contents": "Event.COMPLETE"},
{ "trigger": "Event.COMPLETE", "contents": "Event.COMPLETE"},
{ "trigger": "Event.COMPLETE", "contents": "Event.COMPLETE"},
{ "trigger": "Event.COMPLETE", "contents": "Event.COMPLETE"},
{ "trigger": "Event.COMPLETE", "contents": "Event.COMPLETE"},
{ "trigger": "Event.CONFIRM_NOTIFICATION_COMPLETE", "contents": "Event.CONFIRM_NOTIFICATION_COMPLETE"},
{ "trigger": "Event.DATA_AVAILABLE", "contents": "Event.DATA_AVAILABLE"},
{ "trigger": "Event.DIALOG_CANCEL", "contents": "Event.DIALOG_CANCEL"},
{ "trigger": "Event.DIALOG_COMPLETE", "contents": "Event.DIALOG_COMPLETE"},
{ "trigger": "Event.DIALOG_ERROR", "contents": "Event.DIALOG_ERROR"},
{ "trigger": "Event.END_CONTACT", "contents": "Event.END_CONTACT"},
{ "trigger": "Event.ENTER_FRAME", "contents": "Event.ENTER_FRAME"},
{ "trigger": "Event.ERROR", "contents": "Event.ERROR"},
{ "trigger": "Event.ERROR", "contents": "Event.ERROR"},
{ "trigger": "Event.HEADING_UPDATE", "contents": "Event.HEADING_UPDATE"},
{ "trigger": "Event.KEY_DOWN", "contents": "Event.KEY_DOWN"},
{ "trigger": "Event.KEY_UP", "contents": "Event.KEY_UP"},
{ "trigger": "Event.LOCATION_UPDATE", "contents": "Event.LOCATION_UPDATE"},
{ "trigger": "Event.LOGIN_CANCEL", "contents": "Event.LOGIN_CANCEL"},
{ "trigger": "Event.LOGIN_COMPLETE", "contents": "Event.LOGIN_COMPLETE"},
{ "trigger": "Event.LOGIN_ERROR", "contents": "Event.LOGIN_ERROR"},
{ "trigger": "Event.LOGOUT_COMPLETE", "contents": "Event.LOGOUT_COMPLETE"},
{ "trigger": "Event.MEMORY_WARNING", "contents": "Event.MEMORY_WARNING"},
{ "trigger": "Event.MOUSE_DOWN", "contents": "Event.MOUSE_DOWN"},
{ "trigger": "Event.MOUSE_MOVE", "contents": "Event.MOUSE_MOVE"},
{ "trigger": "Event.MOUSE_UP", "contents": "Event.MOUSE_UP"},
{ "trigger": "Event.POST_SOLVE", "contents": "Event.POST_SOLVE"},
{ "trigger": "Event.PRE_SOLVE", "contents": "Event.PRE_SOLVE"},
{ "trigger": "Event.PROGRESS", "contents": "Event.PROGRESS"},
{ "trigger": "Event.PURCHASE_STATE_CHANGE", "contents": "Event.PURCHASE_STATE_CHANGE"},
{ "trigger": "Event.REMOVED_FROM_STAGE", "contents": "Event.REMOVED_FROM_STAGE"},
{ "trigger": "Event.REQUEST_COMPLETE", "contents": "Event.REQUEST_COMPLETE"},
{ "trigger": "Event.REQUEST_ERROR", "contents": "Event.REQUEST_ERROR"},
{ "trigger": "Event.REQUEST_PRODUCTS_COMPLETE", "contents": "Event.REQUEST_PRODUCTS_COMPLETE"},
{ "trigger": "Event.REQUEST_PURCHASE_COMPLETE", "contents": "Event.REQUEST_PURCHASE_COMPLETE"},
{ "trigger": "Event.RESTORE_TRANSACTIONS_COMPLETE", "contents": "Event.RESTORE_TRANSACTIONS_COMPLETE"},
{ "trigger": "Event.RESTORE_TRANSACTIONS_COMPLETE", "contents": "Event.RESTORE_TRANSACTIONS_COMPLETE"},
{ "trigger": "Event.TIMER", "contents": "Event.TIMER"},
{ "trigger": "Event.TIMER_COMPLETE", "contents": "Event.TIMER_COMPLETE"},
{ "trigger": "Event.TOUCHES_BEGIN", "contents": "Event.TOUCHES_BEGIN"},
{ "trigger": "Event.TOUCHES_CANCEL", "contents": "Event.TOUCHES_CANCEL"},
{ "trigger": "Event.TOUCHES_END", "contents": "Event.TOUCHES_END"},
{ "trigger": "Event.TOUCHES_MOVE", "contents": "Event.TOUCHES_MOVE"},
{ "trigger": "Event.TRANSACTION", "contents": "Event.TRANSACTION"},
{ "trigger": "EventDispatcher", "contents": "EventDispatcher"},
{ "trigger": "EventDispatcher.new", "contents": "EventDispatcher.new()"},
{ "trigger": "addEventListener", "contents": "addEventListener(${1:type}, ${2:listener}, ${3:[data]})"},
{ "trigger": "dispatchEvent", "contents": "dispatchEvent(${1:event})"},
{ "trigger": "hasEventListener", "contents": "hasEventListener(${1:type})"},
{ "trigger": "removeEventListener", "contents": "removeEventListener(${1:type}, ${2:listener}, ${3:data})"},
{ "trigger": "Facebook", "contents": "Facebook"},
{ "trigger": "facebook", "contents": "facebook"},
{ "trigger": "authorize", "contents": "authorize(${1:permissions})"},
{ "trigger": "dialog", "contents": "dialog(${1:action}, ${2:paramaters})"},
{ "trigger": "extendAccessToken", "contents": "extendAccessToken()"},
{ "trigger": "extendAccessTokenIfNeeded", "contents": "extendAccessTokenIfNeeded()"},
{ "trigger": "getAccessToken", "contents": "getAccessToken()"},
{ "trigger": "getExpirationDate", "contents": "getExpirationDate()"},
{ "trigger": "graphRequest", "contents": "graphRequest(${1:graphPath}, ${2:paramaters}, ${3:method})"},
{ "trigger": "isSessionValid", "contents": "isSessionValid()"},
{ "trigger": "logout", "contents": "logout()"},
{ "trigger": "setAccessToken", "contents": "setAccessToken(${1:accessToken})"},
{ "trigger": "setAppId", "contents": "setAppId(${1:appId})"},
{ "trigger": "setExpirationDate", "contents": "setExpirationDate(${1:expirationDate})"},
{ "trigger": "shouldExtendAccessToken", "contents": "shouldExtendAccessToken()"},
{ "trigger": "file", "contents": "file"},
{ "trigger": "file.close", "contents": "file.close()"},
{ "trigger": "file.flush", "contents": "file.flush()"},
{ "trigger": "file.lines", "contents": "file.lines()"},
{ "trigger": "file.read", "contents": "file.read(${1:format1}, ${2:...})"},
{ "trigger": "file.seek", "contents": "file.seek(${1:whence}, ${2:[offset]})"},
{ "trigger": "file.write", "contents": "file.write(${1:value1}, ${2:...})"},
{ "trigger": "flurry", "contents": "flurry"},
{ "trigger": "flurry.endTimedEvent", "contents": "flurry.endTimedEvent(${1:eventName}, ${2:parameters})"},
{ "trigger": "flurry.isAvailable", "contents": "flurry.isAvailable()"},
{ "trigger": "flurry.logEvent", "contents": "flurry.logEvent(${1:eventName}, ${2:parameters}, ${3:timed})"},
{ "trigger": "flurry.startSession", "contents": "flurry.startSession(${1:apiKey})"},
{ "trigger": "Font", "contents": "Font"},
{ "trigger": "Font.new", "contents": "Font.new(${1:txtfile}, ${2:imagefile}, ${3:filtering})"},
{ "trigger": "FontBase", "contents": "FontBase"},
{ "trigger": "fontbase", "contents": "fontbase"},
{ "trigger": "getAdvanceX", "contents": "getAdvanceX(${1:text}, ${2:letterSpacing}, ${3:size})"},
{ "trigger": "getAscender", "contents": "getAscender()"},
{ "trigger": "getBounds", "contents": "getBounds(${1:text})"},
{ "trigger": "getLineHeight", "contents": "getLineHeight()"},
{ "trigger": "Geolocation", "contents": "Geolocation"},
{ "trigger": "Geolocation.getAccuracy", "contents": "Geolocation.getAccuracy()"},
{ "trigger": "Geolocation.getThreshold", "contents": "Geolocation.getThreshold()"},
{ "trigger": "Geolocation.isAvailable", "contents": "Geolocation.isAvailable()"},
{ "trigger": "Geolocation.isHeadingAvailable", "contents": "Geolocation.isHeadingAvailable()"},
{ "trigger": "Geolocation.new", "contents": "Geolocation.new()"},
{ "trigger": "Geolocation.setAccuracy", "contents": "Geolocation.setAccuracy(${1:accuracy})"},
{ "trigger": "Geolocation.setThreshold", "contents": "Geolocation.setThreshold(${1:threshold})"},
{ "trigger": "start", "contents": "start()"},
{ "trigger": "startUpdatingHeading", "contents": "startUpdatingHeading()"},
{ "trigger": "startUpdatingLocation", "contents": "startUpdatingLocation()"},
{ "trigger": "stop", "contents": "stop()"},
{ "trigger": "stopUpdatingHeading", "contents": "stopUpdatingHeading()"},
{ "trigger": "stopUpdatingLocation", "contents": "stopUpdatingLocation()"},
{ "trigger": "GoogleBilling", "contents": "GoogleBilling"},
{ "trigger": "googlebilling", "contents": "googlebilling"},
{ "trigger": "checkBillingSupported", "contents": "checkBillingSupported(${1:productType})"},
{ "trigger": "confirmNotification", "contents": "confirmNotification(${1:notificationId})"},
{ "trigger": "requestPurchase", "contents": "requestPurchase(${1:productId}, ${2:productType}, ${3:developerPayload})"},
{ "trigger": "restoreTransactions", "contents": "restoreTransactions()"},
{ "trigger": "setApiVersion", "contents": "setApiVersion(${1:apiVersion})"},
{ "trigger": "setPublicKey", "contents": "setPublicKey(${1:publicKey})"},
{ "trigger": "GoogleBilling.BILLING_UNAVAILABLE", "contents": "GoogleBilling.BILLING_UNAVAILABLE"},
{ "trigger": "GoogleBilling.CANCELED", "contents": "GoogleBilling.CANCELED"},
{ "trigger": "GoogleBilling.DEVELOPER_ERROR", "contents": "GoogleBilling.DEVELOPER_ERROR"},
{ "trigger": "GoogleBilling.ERROR", "contents": "GoogleBilling.ERROR"},
{ "trigger": "GoogleBilling.EXPIRED", "contents": "GoogleBilling.EXPIRED"},
{ "trigger": "GoogleBilling.INAPP", "contents": "GoogleBilling.INAPP"},
{ "trigger": "GoogleBilling.ITEM_UNAVAILABLE", "contents": "GoogleBilling.ITEM_UNAVAILABLE"},
{ "trigger": "GoogleBilling.OK", "contents": "GoogleBilling.OK"},
{ "trigger": "GoogleBilling.PURCHASED", "contents": "GoogleBilling.PURCHASED"},
{ "trigger": "GoogleBilling.REFUNDED", "contents": "GoogleBilling.REFUNDED"},
{ "trigger": "GoogleBilling.SERVICE_UNAVAILABLE", "contents": "GoogleBilling.SERVICE_UNAVAILABLE"},
{ "trigger": "GoogleBilling.SUBS", "contents": "GoogleBilling.SUBS"},
{ "trigger": "GoogleBilling.USER_CANCELED", "contents": "GoogleBilling.USER_CANCELED"},
{ "trigger": "Gyroscope", "contents": "Gyroscope"},
{ "trigger": "Gyroscope.isAvailable", "contents": "Gyroscope.isAvailable()"},
{ "trigger": "Gyroscope.new", "contents": "Gyroscope.new()"},
{ "trigger": "getRotationRate", "contents": "getRotationRate()"},
{ "trigger": "start", "contents": "start()"},
{ "trigger": "stop", "contents": "stop()"},
{ "trigger": "iad", "contents": "iad"},
{ "trigger": "iad.isAvailable", "contents": "iad.isAvailable()"},
{ "trigger": "iad.Banner", "contents": "iad.Banner"},
{ "trigger": "iad.Banner.new", "contents": "iad.Banner.new(${1:alignment}, ${2:orientation})"},
{ "trigger": "hide", "contents": "hide()"},
{ "trigger": "isBannerLoaded", "contents": "isBannerLoaded()"},
{ "trigger": "setAlignment", "contents": "setAlignment(${1:alignment})"},
{ "trigger": "show", "contents": "show()"},
{ "trigger": "iad.Banner.BOTTOM", "contents": "iad.Banner.BOTTOM"},
{ "trigger": "iad.Banner.LANDSCAPE", "contents": "iad.Banner.LANDSCAPE"},
{ "trigger": "iad.Banner.PORTRAIT", "contents": "iad.Banner.PORTRAIT"},
{ "trigger": "iad.Banner.TOP", "contents": "iad.Banner.TOP"},
{ "trigger": "io", "contents": "io"},
{ "trigger": "io.close", "contents": "io.close(${1:file})"},
{ "trigger": "io.flush", "contents": "io.flush()"},
{ "trigger": "io.input", "contents": "io.input(${1:file})"},
{ "trigger": "io.lines", "contents": "io.lines(${1:filename})"},
{ "trigger": "io.open", "contents": "io.open(${1:filename}, ${2:[mode]})"},
{ "trigger": "io.output", "contents": "io.output(${1:file})"},
{ "trigger": "io.read", "contents": "io.read(${1:format1}, ${2:...})"},
{ "trigger": "io.tmpfile", "contents": "io.tmpfile()"},
{ "trigger": "io.type", "contents": "io.type(${1:obj})"},
{ "trigger": "io.write", "contents": "io.write(${1:value1}, ${2:...})"},
{ "trigger": "json", "contents": "json"},
{ "trigger": "json.decode", "contents": "json.decode(${1:jsondata})"},
{ "trigger": "json.encode", "contents": "json.encode(${1:data})"},
{ "trigger": "KeyCode", "contents": "KeyCode"},
{ "trigger": "keycode", "contents": "keycode"},
{ "trigger": "KeyCode.A", "contents": "KeyCode.A"},
{ "trigger": "KeyCode.B", "contents": "KeyCode.B"},
{ "trigger": "KeyCode.BACK", "contents": "KeyCode.BACK"},
{ "trigger": "KeyCode.C", "contents": "KeyCode.C"},
{ "trigger": "KeyCode.CENTER", "contents": "KeyCode.CENTER"},
{ "trigger": "KeyCode.D", "contents": "KeyCode.D"},
{ "trigger": "KeyCode.DOWN", "contents": "KeyCode.DOWN"},
{ "trigger": "KeyCode.E", "contents": "KeyCode.E"},
{ "trigger": "KeyCode.F", "contents": "KeyCode.F"},
{ "trigger": "KeyCode.G", "contents": "KeyCode.G"},
{ "trigger": "KeyCode.H", "contents": "KeyCode.H"},
{ "trigger": "KeyCode.I", "contents": "KeyCode.I"},
{ "trigger": "KeyCode.J", "contents": "KeyCode.J"},
{ "trigger": "KeyCode.K", "contents": "KeyCode.K"},
{ "trigger": "KeyCode.L", "contents": "KeyCode.L"},
{ "trigger": "KeyCode.L1", "contents": "KeyCode.L1"},
{ "trigger": "KeyCode.LEFT", "contents": "KeyCode.LEFT"},
{ "trigger": "KeyCode.M", "contents": "KeyCode.M"},
{ "trigger": "KeyCode.MENU", "contents": "KeyCode.MENU"},
{ "trigger": "KeyCode.N", "contents": "KeyCode.N"},
{ "trigger": "KeyCode.NUM_0", "contents": "KeyCode.NUM_0"},
{ "trigger": "KeyCode.NUM_1", "contents": "KeyCode.NUM_1"},
{ "trigger": "KeyCode.NUM_2", "contents": "KeyCode.NUM_2"},
{ "trigger": "KeyCode.NUM_3", "contents": "KeyCode.NUM_3"},
{ "trigger": "KeyCode.NUM_4", "contents": "KeyCode.NUM_4"},
{ "trigger": "KeyCode.NUM_5", "contents": "KeyCode.NUM_5"},
{ "trigger": "KeyCode.NUM_6", "contents": "KeyCode.NUM_6"},
{ "trigger": "KeyCode.NUM_7", "contents": "KeyCode.NUM_7"},
{ "trigger": "KeyCode.NUM_8", "contents": "KeyCode.NUM_8"},
{ "trigger": "KeyCode.NUM_9", "contents": "KeyCode.NUM_9"},
{ "trigger": "KeyCode.O", "contents": "KeyCode.O"},
{ "trigger": "KeyCode.P", "contents": "KeyCode.P"},
{ "trigger": "KeyCode.Q", "contents": "KeyCode.Q"},
{ "trigger": "KeyCode.R1", "contents": "KeyCode.R1"},
{ "trigger": "KeyCode.RIGHT", "contents": "KeyCode.RIGHT"},
{ "trigger": "KeyCode.S", "contents": "KeyCode.S"},
{ "trigger": "KeyCode.SEARCH", "contents": "KeyCode.SEARCH"},
{ "trigger": "KeyCode.SELECT", "contents": "KeyCode.SELECT"},
{ "trigger": "KeyCode.START", "contents": "KeyCode.START"},
{ "trigger": "KeyCode.T", "contents": "KeyCode.T"},
{ "trigger": "KeyCode.U", "contents": "KeyCode.U"},
{ "trigger": "KeyCode.UP", "contents": "KeyCode.UP"},
{ "trigger": "KeyCode.V", "contents": "KeyCode.V"},
{ "trigger": "KeyCode.W", "contents": "KeyCode.W"},
{ "trigger": "KeyCode.X", "contents": "KeyCode.X"},
{ "trigger": "KeyCode.Y", "contents": "KeyCode.Y"},
{ "trigger": "KeyCode.Z", "contents": "KeyCode.Z"},
{ "trigger": "lfs", "contents": "lfs"},
{ "trigger": "lpeg", "contents": "lpeg"},
{ "trigger": "math", "contents": "math"},
{ "trigger": "math.abs", "contents": "math.abs(${1:v})"},
{ "trigger": "math.acos", "contents": "math.acos(${1:v})"},
{ "trigger": "math.asin", "contents": "math.asin(${1:v})"},
{ "trigger": "math.atan", "contents": "math.atan(${1:v})"},
{ "trigger": "math.atan2", "contents": "math.atan2(${1:v1}, ${2:v2})"},
{ "trigger": "math.ceil", "contents": "math.ceil(${1:v})"},
{ "trigger": "math.cos", "contents": "math.cos(${1:rad})"},
{ "trigger": "math.deg", "contents": "math.deg(${1:rad})"},
{ "trigger": "math.exp", "contents": "math.exp(${1:v})"},
{ "trigger": "math.floor", "contents": "math.floor(${1:v})"},
{ "trigger": "math.fmod", "contents": "math.fmod(${1:v1}, ${2:v2})"},
{ "trigger": "math.frexp", "contents": "math.frexp(${1:v})"},
{ "trigger": "math.ldexp", "contents": "math.ldexp(${1:v1}, ${2:v2})"},
{ "trigger": "math.log", "contents": "math.log(${1:v})"},
{ "trigger": "math.log10", "contents": "math.log10(${1:v})"},
{ "trigger": "math.max", "contents": "math.max(${1:v1}, ${2:...})"},
{ "trigger": "math.min", "contents": "math.min(${1:v1}, ${2:...})"},
{ "trigger": "math.pow", "contents": "math.pow(${1:v1}, ${2:v2})"},
{ "trigger": "math.rad", "contents": "math.rad(${1:deg})"},
{ "trigger": "math.random", "contents": "math.random(${1:n}, ${2:[u]})"},
{ "trigger": "math.randomseed", "contents": "math.randomseed(${1:seed})"},
{ "trigger": "math.sin", "contents": "math.sin(${1:rad})"},
{ "trigger": "math.sqrt", "contents": "math.sqrt(${1:v})"},
{ "trigger": "math.tan", "contents": "math.tan(${1:rad})"},
{ "trigger": "huge", "contents": "huge"},
{ "trigger": "pi", "contents": "pi"},
{ "trigger": "Matrix", "contents": "Matrix"},
{ "trigger": "Matrix.new", "contents": "Matrix.new(${1:m11}, ${2:m12}, ${3:m21}, ${4:m22}, ${5:tx}, ${6:ty})"},
{ "trigger": "getElements", "contents": "getElements()"},
{ "trigger": "getM11", "contents": "getM11()"},
{ "trigger": "getM12", "contents": "getM12()"},
{ "trigger": "getM21", "contents": "getM21()"},
{ "trigger": "getM22", "contents": "getM22()"},
{ "trigger": "getTx", "contents": "getTx()"},
{ "trigger": "getTy", "contents": "getTy()"},
{ "trigger": "setElements", "contents": "setElements(${1:m11}, ${2:m12}, ${3:m21}, ${4:m22}, ${5:tx}, ${6:ty})"},
{ "trigger": "setM11", "contents": "setM11(${1:m11})"},
{ "trigger": "setM12", "contents": "setM12(${1:m12})"},
{ "trigger": "setM21", "contents": "setM21(${1:m21})"},
{ "trigger": "setM22", "contents": "setM22(${1:m22})"},
{ "trigger": "setTx", "contents": "setTx(${1:tx})"},
{ "trigger": "setTy", "contents": "setTy(${1:ty})"},
{ "trigger": "Mesh", "contents": "Mesh"},
{ "trigger": "Mesh.new", "contents": "Mesh.new()"},
{ "trigger": "clearColorArray", "contents": "clearColorArray()"},
{ "trigger": "clearIndexArray", "contents": "clearIndexArray()"},
{ "trigger": "clearTexture", "contents": "clearTexture()"},
{ "trigger": "clearTextureCoordinateArray", "contents": "clearTextureCoordinateArray()"},
{ "trigger": "clearVertexArray", "contents": "clearVertexArray()"},
{ "trigger": "getColor", "contents": "getColor(${1:i})"},
{ "trigger": "getColorArraySize", "contents": "getColorArraySize()"},
{ "trigger": "getIndex", "contents": "getIndex(${1:i})"},
{ "trigger": "getIndexArraySize", "contents": "getIndexArraySize()"},
{ "trigger": "getTextureCoordinate", "contents": "getTextureCoordinate(${1:i})"},
{ "trigger": "getTextureCoordinateArraySize", "contents": "getTextureCoordinateArraySize()"},
{ "trigger": "getVertex", "contents": "getVertex(${1:i})"},
{ "trigger": "getVertexArraySize", "contents": "getVertexArraySize()"},
{ "trigger": "resizeColorArray", "contents": "resizeColorArray(${1:size})"},
{ "trigger": "resizeIndexArray", "contents": "resizeIndexArray(${1:size})"},
{ "trigger": "resizeTextureCoordinateArray", "contents": "resizeTextureCoordinateArray(${1:size})"},
{ "trigger": "resizeVertexArray", "contents": "resizeVertexArray(${1:size})"},
{ "trigger": "setColor", "contents": "setColor(${1:i}, ${2:color}, ${3:alpha})"},
{ "trigger": "setColorArray", "contents": "setColorArray(${1:colors})"},
{ "trigger": "setColors", "contents": "setColors(${1:colors})"},
{ "trigger": "setIndex", "contents": "setIndex(${1:i}, ${2:index})"},
{ "trigger": "setIndexArray", "contents": "setIndexArray(${1:indices})"},
{ "trigger": "setIndices", "contents": "setIndices(${1:indices})"},
{ "trigger": "setTexture", "contents": "setTexture(${1:texture})"},
{ "trigger": "setTextureCoordinate", "contents": "setTextureCoordinate(${1:i}, ${2:u}, ${3:v})"},
{ "trigger": "setTextureCoordinateArray", "contents": "setTextureCoordinateArray(${1:textureCoordinates})"},
{ "trigger": "setTextureCoordinates", "contents": "setTextureCoordinates(${1:textureCoordinates})"},
{ "trigger": "setVertex", "contents": "setVertex(${1:i}, ${2:x}, ${3:y})"},
{ "trigger": "setVertexArray", "contents": "setVertexArray(${1:vertices})"},
{ "trigger": "setVertices", "contents": "setVertices(${1:vertices})"},
{ "trigger": "Microphone", "contents": "Microphone"},
{ "trigger": "Microphone.new", "contents": "Microphone.new(${1:deviceName}, ${2:sampleRate}, ${3:numChannels}, ${4:bitsPerSample})"},
{ "trigger": "setOutputFile", "contents": "setOutputFile(${1:fileName})"},
{ "trigger": "start", "contents": "start()"},
{ "trigger": "stop", "contents": "stop()"},
{ "trigger": "MovieClip", "contents": "MovieClip"},
{ "trigger": "MovieClip.new", "contents": "MovieClip.new(${1:timeline})"},
{ "trigger": "clearAction", "contents": "clearAction(${1:frame})"},
{ "trigger": "gotoAndPlay", "contents": "gotoAndPlay(${1:frame})"},
{ "trigger": "gotoAndStop", "contents": "gotoAndStop(${1:frame})"},
{ "trigger": "play", "contents": "play()"},
{ "trigger": "setGotoAction", "contents": "setGotoAction(${1:frame}, ${2:destframe})"},
{ "trigger": "setStopAction", "contents": "setStopAction(${1:frame})"},
{ "trigger": "stop", "contents": "stop()"},
{ "trigger": "os", "contents": "os"},
{ "trigger": "os.clock", "contents": "os.clock()"},
{ "trigger": "os.date", "contents": "os.date(${1:format}, ${2:[time]})"},
{ "trigger": "os.difftime", "contents": "os.difftime(${1:t2}, ${2:t1})"},
{ "trigger": "os.execute", "contents": "os.execute(${1:command})"},
{ "trigger": "os.exit", "contents": "os.exit(${1:code})"},
{ "trigger": "os.getenv", "contents": "os.getenv(${1:varname})"},
{ "trigger": "os.remove", "contents": "os.remove(${1:filename})"},
{ "trigger": "os.rename", "contents": "os.rename(${1:oldname}, ${2:newname})"},
{ "trigger": "os.setlocale", "contents": "os.setlocale(${1:locale}, ${2:[category]})"},
{ "trigger": "os.time", "contents": "os.time(${1:table})"},
{ "trigger": "os.timer", "contents": "os.timer()"},
{ "trigger": "os.tmpname", "contents": "os.tmpname()"},
{ "trigger": "package", "contents": "package"},
{ "trigger": "package.loadlib", "contents": "package.loadlib(${1:libname}, ${2:funcname})"},
{ "trigger": "RenderTarget", "contents": "RenderTarget"},
{ "trigger": "RenderTarget.new", "contents": "RenderTarget.new(${1:width}, ${2:height}, ${3:filtering})"},
{ "trigger": "clear", "contents": "clear(${1:color}, ${2:alpha})"},
{ "trigger": "draw", "contents": "draw(${1:sprite})"},
{ "trigger": "Shape", "contents": "Shape"},
{ "trigger": "Shape.new", "contents": "Shape.new()"},
{ "trigger": "beginPath", "contents": "beginPath(${1:winding})"},
{ "trigger": "clear", "contents": "clear()"},
{ "trigger": "closePath", "contents": "closePath()"},
{ "trigger": "endPath", "contents": "endPath()"},
{ "trigger": "lineTo", "contents": "lineTo(${1:x}, ${2:y})"},
{ "trigger": "moveTo", "contents": "moveTo(${1:x}, ${2:y})"},
{ "trigger": "setFillStyle", "contents": "setFillStyle(${1:type}, ${2:...})"},
{ "trigger": "setLineStyle", "contents": "setLineStyle(${1:width}, ${2:color}, ${3:alpha})"},
{ "trigger": "Shape.EVEN_ODD", "contents": "Shape.EVEN_ODD"},
{ "trigger": "Shape.NONE", "contents": "Shape.NONE"},
{ "trigger": "Shape.NON_ZERO", "contents": "Shape.NON_ZERO"},
{ "trigger": "Shape.SOLID", "contents": "Shape.SOLID"},
{ "trigger": "Shape.TEXTURE", "contents": "Shape.TEXTURE"},
{ "trigger": "Sound", "contents": "Sound"},
{ "trigger": "Sound.new", "contents": "Sound.new(${1:filename})"},
{ "trigger": "getLength", "contents": "getLength()"},
{ "trigger": "play", "contents": "play(${1:startTime}, ${2:looping}, ${3:paused})"},
{ "trigger": "SoundChannel", "contents": "SoundChannel"},
{ "trigger": "soundchannel", "contents": "soundchannel"},
{ "trigger": "getPitch", "contents": "getPitch()"},
{ "trigger": "getPosition", "contents": "getPosition()"},
{ "trigger": "getVolume", "contents": "getVolume()"},
{ "trigger": "isLooping", "contents": "isLooping()"},
{ "trigger": "isPaused", "contents": "isPaused()"},
{ "trigger": "isPlaying", "contents": "isPlaying()"},
{ "trigger": "setLooping", "contents": "setLooping(${1:looping})"},
{ "trigger": "setPaused", "contents": "setPaused(${1:paused})"},
{ "trigger": "setPitch", "contents": "setPitch(${1:pitch})"},
{ "trigger": "setPosition", "contents": "setPosition(${1:position})"},
{ "trigger": "setVolume", "contents": "setVolume(${1:volume})"},
{ "trigger": "stop", "contents": "stop()"},
{ "trigger": "Sprite", "contents": "Sprite"},
{ "trigger": "Sprite.new", "contents": "Sprite.new()"},
{ "trigger": "addChild", "contents": "addChild(${1:child})"},
{ "trigger": "addChildAt", "contents": "addChildAt(${1:child}, ${2:index})"},
{ "trigger": "clearBlendMode", "contents": "clearBlendMode()"},
{ "trigger": "contains", "contents": "contains(${1:child})"},
{ "trigger": "get", "contents": "get(${1:param})"},
{ "trigger": "getAlpha", "contents": "getAlpha()"},
{ "trigger": "getBounds", "contents": "getBounds(${1:targetSprite})"},
{ "trigger": "getChildAt", "contents": "getChildAt(${1:index})"},
{ "trigger": "getChildIndex", "contents": "getChildIndex(${1:child})"},
{ "trigger": "getColorTransform", "contents": "getColorTransform()"},
{ "trigger": "getHeight", "contents": "getHeight()"},
{ "trigger": "getMatrix", "contents": "getMatrix()"},
{ "trigger": "getNumChildren", "contents": "getNumChildren()"},
{ "trigger": "getParent", "contents": "getParent()"},
{ "trigger": "getPosition", "contents": "getPosition()"},
{ "trigger": "getRotation", "contents": "getRotation()"},
{ "trigger": "getScale", "contents": "getScale()"},
{ "trigger": "getScaleX", "contents": "getScaleX()"},
{ "trigger": "getScaleY", "contents": "getScaleY()"},
{ "trigger": "getWidth", "contents": "getWidth()"},
{ "trigger": "getX", "contents": "getX()"},
{ "trigger": "getY", "contents": "getY()"},
{ "trigger": "globalToLocal", "contents": "globalToLocal(${1:x}, ${2:y})"},
{ "trigger": "hitTestPoint", "contents": "hitTestPoint(${1:x}, ${2:y})"},
{ "trigger": "isVisible", "contents": "isVisible()"},
{ "trigger": "localToGlobal", "contents": "localToGlobal(${1:x}, ${2:y})"},
{ "trigger": "removeChild", "contents": "removeChild(${1:child})"},
{ "trigger": "removeChildAt", "contents": "removeChildAt(${1:index})"},
{ "trigger": "removeFromParent", "contents": "removeFromParent()"},
{ "trigger": "set", "contents": "set(${1:param}, ${2:value})"},
{ "trigger": "setAlpha", "contents": "setAlpha(${1:alpha})"},
{ "trigger": "setBlendMode", "contents": "setBlendMode(${1:blendMode})"},
{ "trigger": "setColorTransform", "contents": "setColorTransform(${1:redMultiplier}, ${2:greenMultiplier}, ${3:blueMultiplier}, ${4:alphaMultiplier})"},
{ "trigger": "setMatrix", "contents": "setMatrix(${1:matrix})"},
{ "trigger": "setPosition", "contents": "setPosition(${1:x}, ${2:y})"},
{ "trigger": "setRotation", "contents": "setRotation(${1:rotation})"},
{ "trigger": "setScale", "contents": "setScale(${1:scaleX}, ${2:scaleY})"},
{ "trigger": "setScaleX", "contents": "setScaleX(${1:scaleX})"},
{ "trigger": "setScaleY", "contents": "setScaleY(${1:scaleY})"},
{ "trigger": "setVisible", "contents": "setVisible(${1:visible})"},
{ "trigger": "setX", "contents": "setX(${1:x})"},
{ "trigger": "setY", "contents": "setY(${1:y})"},
{ "trigger": "Sprite.ADD", "contents": "Sprite.ADD"},
{ "trigger": "Sprite.ALPHA", "contents": "Sprite.ALPHA"},
{ "trigger": "Sprite.MULTIPLY", "contents": "Sprite.MULTIPLY"},
{ "trigger": "Sprite.NO_ALPHA", "contents": "Sprite.NO_ALPHA"},
{ "trigger": "Sprite.SCREEN", "contents": "Sprite.SCREEN"},
{ "trigger": "sqlite3", "contents": "sqlite3"},
{ "trigger": "Stage", "contents": "Stage"},
{ "trigger": "stage", "contents": "stage"},
{ "trigger": "StoreKit", "contents": "StoreKit"},
{ "trigger": "storekit", "contents": "storekit"},
{ "trigger": "canMakePayments", "contents": "canMakePayments()"},
{ "trigger": "finishTransaction", "contents": "finishTransaction(${1:transaction})"},
{ "trigger": "purchase", "contents": "purchase(${1:productIdentifier}, ${2:quantity})"},
{ "trigger": "requestProducts", "contents": "requestProducts(${1:productIdentifiers})"},
{ "trigger": "restoreCompletedTransactions", "contents": "restoreCompletedTransactions()"},
{ "trigger": "StoreKit.FAILED", "contents": "StoreKit.FAILED"},
{ "trigger": "StoreKit.PURCHASED", "contents": "StoreKit.PURCHASED"},
{ "trigger": "StoreKit.RESTORED", "contents": "StoreKit.RESTORED"},
{ "trigger": "string", "contents": "string"},
{ "trigger": "string.byte", "contents": "string.byte(${1:s}, ${2:[i]})"},
{ "trigger": "string.char", "contents": "string.char(${1:i1}, ${2:i2}, ${3:...})"},
{ "trigger": "string.dump", "contents": "string.dump(${1:function})"},
{ "trigger": "string.find", "contents": "string.find(${1:s}, ${2:pattern}, ${3:[init]}, ${4:[plain]})"},
{ "trigger": "string.format", "contents": "string.format(${1:formatstring}, ${2:e1}, ${3:e2}, ${4:...})"},
{ "trigger": "string.gmatch", "contents": "string.gmatch(${1:s}, ${2:pat})"},
{ "trigger": "string.gsub", "contents": "string.gsub(${1:s}, ${2:pat}, ${3:repl}, ${4:[n]})"},
{ "trigger": "string.len", "contents": "string.len(${1:s})"},
{ "trigger": "string.lower", "contents": "string.lower(${1:s})"},
{ "trigger": "string.rep", "contents": "string.rep(${1:s}, ${2:n})"},
{ "trigger": "string.sub", "contents": "string.sub(${1:s}, ${2:i}, ${3:[j]})"},
{ "trigger": "string.upper", "contents": "string.upper(${1:s})"},
{ "trigger": "table", "contents": "table"},
{ "trigger": "table.concat", "contents": "table.concat(${1:table}, ${2:[sep]}, ${3:[i]}, ${4:[j]})"},
{ "trigger": "table.getn", "contents": "table.getn(${1:table})"},
{ "trigger": "", "contents": ""},
{ "trigger": "table.insert", "contents": "table.insert(${1:table}, ${2:pos}, ${3:[value]})"},
{ "trigger": "table.remove", "contents": "table.remove(${1:table}, ${2:[pos]})"},
{ "trigger": "table.sort", "contents": "table.sort(${1:table}, ${2:[comp]})"},
{ "trigger": "TextField", "contents": "TextField"},
{ "trigger": "TextField.new", "contents": "TextField.new(${1:font}, ${2:text})"},
{ "trigger": "getLetterSpacing", "contents": "getLetterSpacing()"},
{ "trigger": "getText", "contents": "getText()"},
{ "trigger": "getTextColor", "contents": "getTextColor()"},
{ "trigger": "setLetterSpacing", "contents": "setLetterSpacing(${1:spacing})"},
{ "trigger": "setText", "contents": "setText(${1:text})"},
{ "trigger": "setTextColor", "contents": "setTextColor(${1:color})"},
{ "trigger": "TextInputDialog", "contents": "TextInputDialog"},
{ "trigger": "TextInputDialog.new", "contents": "TextInputDialog.new(${1:title}, ${2:message}, ${3:text}, ${4:cancelButton}, ${5:button1}, ${6:button2})"},
{ "trigger": "getInputType", "contents": "getInputType()"},
{ "trigger": "getText", "contents": "getText()"},
{ "trigger": "isSecureInput", "contents": "isSecureInput()"},
{ "trigger": "setInputType", "contents": "setInputType(${1:type})"},
{ "trigger": "setSecureInput", "contents": "setSecureInput(${1:secureInput})"},
{ "trigger": "setText", "contents": "setText(${1:text})"},
{ "trigger": "TextInputDialog.EMAIL", "contents": "TextInputDialog.EMAIL"},
{ "trigger": "TextInputDialog.NUMBER", "contents": "TextInputDialog.NUMBER"},
{ "trigger": "TextInputDialog.PHONE", "contents": "TextInputDialog.PHONE"},
{ "trigger": "TextInputDialog.TEXT", "contents": "TextInputDialog.TEXT"},
{ "trigger": "TextInputDialog.URL", "contents": "TextInputDialog.URL"},
{ "trigger": "Texture", "contents": "Texture"},
{ "trigger": "Texture.new", "contents": "Texture.new(${1:filename}, ${2:filtering}, ${3:options})"},
{ "trigger": "TextureBase", "contents": "TextureBase"},
{ "trigger": "texturebase", "contents": "texturebase"},
{ "trigger": "getHeight", "contents": "getHeight()"},
{ "trigger": "getWidth", "contents": "getWidth()"},
{ "trigger": "TextureBase.CLAMP", "contents": "TextureBase.CLAMP"},
{ "trigger": "TextureBase.REPEAT", "contents": "TextureBase.REPEAT"},
{ "trigger": "TextureBase.RGB565", "contents": "TextureBase.RGB565"},
{ "trigger": "TextureBase.RGB888", "contents": "TextureBase.RGB888"},
{ "trigger": "TextureBase.RGBA4444", "contents": "TextureBase.RGBA4444"},
{ "trigger": "TextureBase.RGBA5551", "contents": "TextureBase.RGBA5551"},
{ "trigger": "TextureBase.RGBA8888", "contents": "TextureBase.RGBA8888"},
{ "trigger": "TexturePack", "contents": "TexturePack"},
{ "trigger": "TexturePack.new", "contents": "TexturePack.new(${1:textures}, ${2:padding}, ${3:filtering}, ${4:options})"},
{ "trigger": "TexturePack.new", "contents": "TexturePack.new(${1:txtfile}, ${2:imagefile}, ${3:filtering}, ${4:options})"},
{ "trigger": "getTextureRegion", "contents": "getTextureRegion(${1:texturename})"},
{ "trigger": "TextureRegion", "contents": "TextureRegion"},
{ "trigger": "TextureRegion.new", "contents": "TextureRegion.new(${1:texture})"},
{ "trigger": "TextureRegion.new", "contents": "TextureRegion.new(${1:texture}, ${2:x}, ${3:y}, ${4:width}, ${5:height})"},
{ "trigger": "getRegion", "contents": "getRegion()"},
{ "trigger": "setRegion", "contents": "setRegion(${1:x}, ${2:y}, ${3:width}, ${4:height})"},
{ "trigger": "TileMap", "contents": "TileMap"},
{ "trigger": "TileMap.new", "contents": "TileMap.new(${1:width}, ${2:height}, ${3:texture}, ${4:tilewidth}, ${5:tileheight}, ${6:spacingx}, ${7:spacingy}, ${8:marginx}, ${9:marginy}, ${10:displaywidth}, ${11:displayheight})"},
{ "trigger": "clearTile", "contents": "clearTile(${1:x}, ${2:y})"},
{ "trigger": "getTile", "contents": "getTile(${1:x}, ${2:y})"},
{ "trigger": "setTile", "contents": "setTile(${1:x}, ${2:y}, ${3:tx}, ${4:ty}, ${5:flip})"},
{ "trigger": "shift", "contents": "shift(${1:dx}, ${2:dy})"},
{ "trigger": "TileMap.FLIP_DIAGONAL", "contents": "TileMap.FLIP_DIAGONAL"},
{ "trigger": "TileMap.FLIP_HORIZONTAL", "contents": "TileMap.FLIP_HORIZONTAL"},
{ "trigger": "TileMap.FLIP_VERTICAL", "contents": "TileMap.FLIP_VERTICAL"},
{ "trigger": "Timer", "contents": "Timer"},
{ "trigger": "Timer.delayedCall", "contents": "Timer.delayedCall(${1:delay}, ${2:func}, ${3:[data]})"},
{ "trigger": "Timer.new", "contents": "Timer.new(${1:delay}, ${2:repeatCount})"},
{ "trigger": "Timer.pauseAll", "contents": "Timer.pauseAll()"},
{ "trigger": "Timer.resumeAll", "contents": "Timer.resumeAll()"},
{ "trigger": "Timer.stopAll", "contents": "Timer.stopAll()"},
{ "trigger": "getCurrentCount", "contents": "getCurrentCount()"},
{ "trigger": "getDelay", "contents": "getDelay()"},
{ "trigger": "getRepeatCount", "contents": "getRepeatCount()"},
{ "trigger": "isRunning", "contents": "isRunning()"},
{ "trigger": "reset", "contents": "reset()"},
{ "trigger": "setDelay", "contents": "setDelay(${1:delay})"},
{ "trigger": "setRepeatCount", "contents": "setRepeatCount(${1:repeatCount})"},
{ "trigger": "start", "contents": "start()"},
{ "trigger": "stop", "contents": "stop()"},
{ "trigger": "TTFont", "contents": "TTFont"},
{ "trigger": "TTFont.new", "contents": "TTFont.new(${1:filename}, ${2:size}, ${3:text}, ${4:filtering})"},
{ "trigger": "UrlLoader", "contents": "UrlLoader"},
{ "trigger": "UrlLoader.new", "contents": "UrlLoader.new(${1:url}, ${2:method}, ${3:headers}, ${4:body})"},
{ "trigger": "close", "contents": "close()"},
{ "trigger": "load", "contents": "load(${1:url}, ${2:method}, ${3:headers}, ${4:body})"},
{ "trigger": "UrlLoader.DELETE", "contents": "UrlLoader.DELETE"},
{ "trigger": "UrlLoader.GET", "contents": "UrlLoader.GET"},
{ "trigger": "UrlLoader.POST", "contents": "UrlLoader.POST"},
{ "trigger": "UrlLoader.PUT", "contents": "UrlLoader.PUT"}

    ]
}