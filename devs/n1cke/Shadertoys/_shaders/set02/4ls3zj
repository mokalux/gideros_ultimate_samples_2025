{"Shader":{"ver":"0.1","info":{"id":"4ls3zj","date":"1423363142","viewed":324,"name":"2d water","username":"public_int_i","description":"just messing around","likes":5,"published":3,"flags":0,"tags":["2d","water"],"hasliked":0},"renderpass":[{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":15,"src":"\/presets\/tex10.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\nvec4 texCube(in sampler2D tex, in vec3 p) {\n    return texture2D(tex,p.xz*0.5+0.5);\n}\n\nfloat height(in vec2 uv) {\n    return texture2D(iChannel0,uv).b*texture2D(iChannel1,uv+vec2(0.0,iGlobalTime*0.1)).b;\n}\n\nconst vec2 NE = vec2(0.05,0.0);\nvec3 normal(in vec2 uv) {\n    return normalize(vec3(height(uv+NE.xy)-height(uv-NE.xy),\n                          0.0,\n                          height(uv+NE.yx)-height(uv-NE.yx)));\n}\n\n\n\nconst vec4 waterColor = vec4(0.1,0.1,0.32,1.0);\nvec3 lightDir = normalize(vec3(10.0,15.0,5.0));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy+iMouse.xy) \/ iResolution.xy;\n    uv.y += sin(uv.y*20.0+iGlobalTime)*0.02;\n    uv.x += sin(uv.y*40.0+iGlobalTime)*0.01;\n\n    float h = height(uv);\n    vec3 norm = normal(uv);\n\tfragColor = mix(\n        mix(waterColor+waterColor*max(0.0,dot(lightDir,norm))*0.1,\n        texture2D(iChannel0,uv),0.2),\n                       texture2D(iChannel0,norm.xz*0.5+0.5),0.3);\n}","name":"Image","description":"","type":"image"}]}}