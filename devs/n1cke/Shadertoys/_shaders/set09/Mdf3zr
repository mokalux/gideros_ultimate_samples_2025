{"Shader":{"ver":"0.1","info":{"id":"Mdf3zr","date":"1360979082","viewed":8916,"name":"edge glow","username":"jmk","description":"A simple edge detection (sobel) shader.","likes":92,"published":3,"flags":0,"tags":["2d","sobel"],"hasliked":0},"renderpass":[{"inputs":[{"id":11,"src":"\/presets\/vid00.ogv","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"float d = sin(iGlobalTime * 5.0)*0.5 + 1.5; \/\/ kernel offset\n\nfloat lookup(vec2 p, float dx, float dy)\n{\n    vec2 uv = (p.xy + vec2(dx * d, dy * d)) \/ iResolution.xy;\n    vec4 c = texture2D(iChannel0, uv.xy);\n\t\n\t\/\/ return as luma\n    return 0.2126*c.r + 0.7152*c.g + 0.0722*c.b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy;\n    \n\t\/\/ simple sobel edge detection\n    float gx = 0.0;\n    gx += -1.0 * lookup(p, -1.0, -1.0);\n    gx += -2.0 * lookup(p, -1.0,  0.0);\n    gx += -1.0 * lookup(p, -1.0,  1.0);\n    gx +=  1.0 * lookup(p,  1.0, -1.0);\n    gx +=  2.0 * lookup(p,  1.0,  0.0);\n    gx +=  1.0 * lookup(p,  1.0,  1.0);\n    \n    float gy = 0.0;\n    gy += -1.0 * lookup(p, -1.0, -1.0);\n    gy += -2.0 * lookup(p,  0.0, -1.0);\n    gy += -1.0 * lookup(p,  1.0, -1.0);\n    gy +=  1.0 * lookup(p, -1.0,  1.0);\n    gy +=  2.0 * lookup(p,  0.0,  1.0);\n    gy +=  1.0 * lookup(p,  1.0,  1.0);\n    \n\t\/\/ hack: use g^2 to conceal noise in the video\n    float g = gx*gx + gy*gy;\n    float g2 = g * (sin(iGlobalTime) \/ 2.0 + 0.5);\n    \n    vec4 col = texture2D(iChannel0, p \/ iResolution.xy);\n    col += vec4(0.0, g, g2, 1.0);\n    \n    fragColor = col;\n}","name":"","description":"","type":"image"}]}}