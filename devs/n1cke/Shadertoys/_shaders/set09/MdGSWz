{"Shader":{"ver":"0.1","info":{"id":"MdGSWz","date":"1463749987","viewed":181,"name":"Waves sound controlled","username":"mandragora","description":"based on Siri Ripple https:\/\/www.shadertoy.com\/view\/4sVSzw, controlled by audio input","likes":0,"published":3,"flags":0,"tags":["sound","wave"],"hasliked":0},"renderpass":[{"inputs":[{"id":18,"src":"\/presets\/mzk01.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"#define WAVES 2.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float s = texture2D( iChannel0, vec2(1.0,0.0) ).x*5.0;\n    vec2 uvNorm = fragCoord.xy \/ iResolution.xy;\n\tvec2 uv = -1.0 + 2.0 * uvNorm;\n    float time = iGlobalTime * 10.3;\n       \n  \tvec4 color = vec4(0.0);    \n    vec3 colorLine = vec3(1.0, 1.0, 1.0);\n    \/\/float epaisLine = 0.002;   \n    float epaisLine = texture2D( iChannel0, vec2(1.0,0.0) ).x\/30.0;\n\n    for(float i=0.0; i<WAVES; i++){\n\t\tfloat sizeDif = (i * 4.0);\n        colorLine = vec3(1.0 - (i*0.2));\n        \n        \n\t\t\/\/SiriWave\t\n        \/\/float K = 4.0;\n        float K = s;\n        \/\/float B = 5.0;\n        float B = s;\n        float x = uv.x * 2.5;\n        float att = (1.0 - (i*0.2)) * 0.3;\n        float posOnde = uv.y + (att*pow((K\/(K+pow(x, K))), K) * cos((B*x)-(time+(i*2.5))));\n      \n        \/\/Line\n        float difEpais = epaisLine + ((epaisLine\/WAVES)*i);\n        vec3 line = smoothstep( 0.0, 1.0, abs(epaisLine \/ posOnde)) * colorLine;\n        color += vec4(line, smoothstep( 0.0, 1., abs(epaisLine \/ posOnde)) * colorLine );\n    }\n\n\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}}