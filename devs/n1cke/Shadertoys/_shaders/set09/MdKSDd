{"Shader":{"ver":"0.1","info":{"id":"MdKSDd","date":"1467505288","viewed":230,"name":"I Tried to Simulate WaterColor","username":"CaptCM74","description":"And Then failed horribly.\n\nhttps:\/\/forums.tigsource.com\/index.php?topic=22866.0","likes":1,"published":3,"flags":34,"tags":["fail","watercolor"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":258,"src":"\/presets\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\n\n\/*\nTHE PLAN - https:\/\/forums.tigsource.com\/index.php?topic=22866.0\n1. Draw 7 times as brush pattern\n2. Pick the brightest\n3. Extrude 'em on blaack background\n4. Woah nice\n*\/\n\n#define iterations 30. \n\/\/^ How much to Extrude\n\n\nfloat bright (vec4 col)\n{\n return (col.x+col.y+col.z) \/ 3.; \n}\n\nvec3 bs(vec4 col1,vec4 col2)\n{\n    \n    \n    float fr = max(col1.x,col2.x);\n    float fg = max(col1.y,col2.y);\n    float fb = max(col1.z,col2.z);\n    \n    return vec3(fr,fg,fb);\n}\nvec2 rot(float ang) \/\/Rotation thing. [sin and cos thing] Just wanna get it simple.\n{\n \n    return vec2(cos(ang),sin(ang));\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float angle = 325.;\/\/mod(iGlobalTime , 360.); \/\/Angle to Extrude\n    \n    \n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    \n    vec4 mixed = texture2D(iChannel0,uv);\n    \n    \n    \n    for(float i=0.;i<iterations;i++)\n    {\n    mixed = vec4(bs(texture2D(iChannel0,vec2(uv.x + (rot(angle).x * (0.001 * (iterations - i))) ,uv.y + (rot(angle).y * (0.001 * (iterations - i))) ) ),mixed),1.);\n    }\n        \n\tfragColor = mixed;\/\/vec4(uv,0.5+0.5*sin(iGlobalTime),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":258,"src":"\/presets\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":257,"channel":0}],"code":"\n\/*\nTHE PLAN - https:\/\/forums.tigsource.com\/index.php?topic=22866.0\n1. Draw 7 times as brush pattern\n2. Pick the brightest\n3. Extrude 'em on blaack background\n4. Woah nice\n*\/\n#define brushdist 0.8\n\/\/How far each \"Buffers\" are. \n\nfloat bright (vec4 col)\n{\n return (col.x+col.y+col.z) \/ 3.; \n}\n\nvec3 bs(vec4 col1,vec4 col2)\n{\n    \n    \n    float fr = max(col1.x,col2.x);\n    float fg = max(col1.y,col2.y);\n    float fb = max(col1.z,col2.z);\n    \n    return vec3(fr,fg,fb);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    vec4 chunkypolypass1 = texture2D(iChannel0,uv); \/\/Center\n    vec4 chunkypolypass2 = texture2D(iChannel0,vec2(uv.x + 0.004 * brushdist,uv.y + 0.004 * brushdist)); \/\/0.001 = 1 pixel?\n    vec4 chunkypolypass3 = texture2D(iChannel0,vec2(uv.x - 0.004 * brushdist,uv.y + 0.004 * brushdist));\n    vec4 chunkypolypass4 = texture2D(iChannel0,vec2(uv.x,uv.y + 0.01 * brushdist)); \/\/Toppest\n    vec4 chunkypolypass5 = texture2D(iChannel0,vec2(uv.x + 0.004 * brushdist,uv.y - 0.004 * brushdist)); \n    vec4 chunkypolypass6 = texture2D(iChannel0,vec2(uv.x - 0.004 * brushdist,uv.y - 0.004 * brushdist));\n    vec4 chunkypolypass7 = texture2D(iChannel0,vec2(uv.x,uv.y - 0.01 * brushdist)); \/\/Downer\n    \n    vec4 mixed = vec4(vec3(bs(chunkypolypass1,chunkypolypass2)),1.);\/\/(chunkypolypass1 + chunkypolypass2 + chunkypolypass3 + chunkypolypass4 + chunkypolypass5 + chunkypolypass6 + chunkypolypass7);\n    mixed = vec4(vec3(bs(mixed,chunkypolypass3 * 0.8)),1.);\n    mixed = vec4(vec3(bs(mixed,chunkypolypass4 * 0.8)),1.);\n    mixed = vec4(vec3(bs(mixed,chunkypolypass5 * 0.8)),1.);\n    mixed = vec4(vec3(bs(mixed,chunkypolypass6 * 0.8)),1.);\n    mixed = vec4(vec3(bs(mixed,chunkypolypass7 * 0.8)),1.);\n    \n    \n    \n    \n        \n\tfragColor = mixed;\/\/vec4(uv,0.5+0.5*sin(iGlobalTime),1.0);\n}\n","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":11,"src":"\/presets\/vid00.ogv","ctype":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":31,"src":"\/presets\/webcam.png","ctype":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":258,"channel":0}],"code":"#define contrast 1.2\n\nfloat rand(vec2 co){\n   \/\/ http:\/\/stackoverflow.com\/questions\/4200224\/random-noise-functions-for-glsl\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * (40000.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    vec4 img = texture2D(iChannel1,uv);\n    \n    img.rgb \/= img.a;\n    \n    img.rgb -= vec3(0.02,0.05,0.07);\n    \n    img.rgb = ((img.rgb - 0.5) * max(contrast, 0.)) + 0.5;\n    \/\/http:\/\/stackoverflow.com\/questions\/944713\/help-with-pixel-shader-effect-for-brightness-and-contrast\n    \n    img.rgb = min(img.rgb,vec3(0.98));\n    \n    img.rgb -= vec3(rand(uv));\n    \n    fragColor = img;\n}","name":"Buf B","description":"","type":"buffer"}]}}