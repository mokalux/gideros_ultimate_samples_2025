{"Shader":{"ver":"0.1","info":{"id":"MsdSzB","date":"1460125001","viewed":203,"name":"Some cross-hatching Experiment.","username":"CaptCM74","description":"I know. this is really HORRIBLE.","likes":1,"published":3,"flags":32,"tags":["dithering"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"float RNGEESUS(float x,float y)\n     {\n\t\/\/ Original code from Glsl tutorials - https:\/\/www.shadertoy.com\/view\/Md23DV\n    return fract(abs(sin(iDate.w)*sin(x)*sin(y)) * 43758.5453);\n      }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec4 tex = texture2D(iChannel0,uv);\n    \n    vec3 fcol = vec3(tex.x,tex.y,tex.z);\n    vec4 bff= texture2D(iChannel1,uv);\n    \n    \n    fcol = vec3((fcol.x* 1.0\/3.0 + fcol.y* 1.0\/3.0 + fcol.z* 1.0\/3.0));\n    \n    float rg1 = RNGEESUS(fragCoord.x,fragCoord.y);\n    float rg2 = RNGEESUS(fragCoord.x-0.001,fragCoord.y);\n    float rg3 = RNGEESUS(fragCoord.x+0.001,fragCoord.y);\n    float rg4 = RNGEESUS(fragCoord.x,fragCoord.y+0.001);\n    float rg5 = RNGEESUS(fragCoord.x,fragCoord.y-0.001);\n    float rg6 = RNGEESUS(fragCoord.x+0.001,fragCoord.y-0.001);\n    float rg7 = RNGEESUS(fragCoord.x-0.001,fragCoord.y-0.001);\n    float rg8 = RNGEESUS(fragCoord.x+0.001,fragCoord.y+0.001);\n    float rg9 = RNGEESUS(fragCoord.x-0.001,fragCoord.y+0.001);\n    \n    \n    float xx = (rg1 * 1.0\/9.0) + (rg2 * 1.0\/9.0) + (rg3 * 1.0\/9.0) + (rg4 * 1.0\/9.0) + (rg5 * 1.0\/9.0) + (rg6 * 1.0\/9.0) + (rg7 * 1.0\/9.0) + (rg8 * 1.0\/9.0) + (rg9 * 1.0\/9.0);    \n    \n    \/\/float xx = (rg1.x * 1.0\/5.0) + (rg2.x * 1.0\/5.0) + (rg3.x * 1.0\/5.0) + (rg4.x * 1.0\/5.0) + (rg5.x * 1.0\/5.0);\n    \n    \n    \n    \n    xx = step(0.5,xx);\n    \n    vec3 tt = vec3(tex.x,tex.y,tex.z);\n    \n    vec3 ttt = vec3(tex.x,tex.y,tex.z);\n    \n    for (float i=0.0;i<1.0;i+=0.1)\n    {\n    \n    if (ttt.x > i && ttt.x < i+0.1)\n    {\n        ttt.x = i;\n    }\n        \n    }\n    for (float i=0.0;i<1.0;i+=0.1)\n    {\n    \n    if (ttt.y > i && ttt.y < i+0.1)\n    {\n        ttt.y = i;\n    }\n        \n    }\n    for (float i=0.0;i<1.0;i+=0.1)\n    {\n    \n    if (ttt.z > i && ttt.z < i+0.1)\n    {\n        ttt.z = i;\n    }\n        \n    }\n    tt *= vec3(xx+xx*0.8,xx+xx*0.8,xx+xx*0.8);\n    \n    \n    vec3 ffcol = mix(ttt,tt,min(1.0 - fcol.x,0.2));\n    \n    vec3 bw = vec3(1.0);\n    \n    fragColor = vec4(vec3(1.0),1.0);\n    \n    if (fcol.x <  0.25)\n    {\n    if (mod(fragCoord.x + fragCoord.y, 3.0) == 0.0)\n    {\n        bw = vec3(0.8);\n        \n    }\n\tif (mod(fragCoord.x - fragCoord.y, 3.0) == 0.0)\n    {\n        bw = vec3(0.8);\n        \n    }\n    }\n    \n    if (fcol.x <  0.5)\n    {\n    if (mod(fragCoord.x + fragCoord.y, 5.0) == 0.0)\n    {\n        bw = vec3(0.8);\n        \n    }\n\tif (mod(fragCoord.x - fragCoord.y, 5.0) == 0.0)\n    {\n        bw = vec3(0.8);\n        \n    }\n    }\n    if (fcol.x <  0.55)\n    {\n    if (mod(fragCoord.x + fragCoord.y, 15.0) == 0.0)\n    {\n        bw = vec3(0.8);\n        \n    }\n\tif (mod(fragCoord.x - fragCoord.y, 15.0) == 0.0)\n    {\n        bw = vec3(0.8);\n        \n    }\n    }\n    fragColor = vec4(ttt*bw,1.0);\n    \/\/fragColor = vec4(mix(bw,ttt,fcol.x),1.0);\n    \/\/fragColor = vec4(bff);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":257,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n   \n    fragColor = vec4(vec3(1.0),1.0);\n    \n    \n    if (mod(fragCoord.x*10.0 , 1.5) == 0.0 && mod(fragCoord.y*10.0 , 1.5) == 0.0)\n    {\n        fragColor = vec4(vec3(0.0),1.0);\n        \n    }\n    \n    \n    if (mod(fragCoord.x - fragCoord.y, 10.0) == 0.0)\n    {\n     \/\/  fragColor = vec4(vec3(0.0),1.0);\n        \n    }\n    \n    \n    \n    \n}","name":"Buf A","description":"","type":"buffer"}]}}