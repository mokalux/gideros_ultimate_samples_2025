{"Shader":{"ver":"0.1","info":{"id":"MsKGWt","date":"1457222106","viewed":327,"name":"Totoro!","username":"davidbargo","description":"Totoro","likes":22,"published":3,"flags":8,"tags":["2d","music"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Created by David Bargo - davidbargo\/2016\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\nfloat circle(vec2 pos, float radius, float width)\n{\n    return abs(length(pos)-radius)-width;   \n}\n\n\/\/-----------------------------------------------------------------\n\/\/ From Maarten\nfloat circleFill(vec2 pos, float radius)\n{\n    return length(pos)-radius;   \n}\n\nfloat smoothMerge(float d1, float d2, float k)\n{\n    float h = clamp(0.5 + 0.5*(d2 - d1)\/k, 0.0, 1.0);\n    return mix(d2, d1, h) - k * h * (1.0-h);\n}\n\nfloat line(vec2 p, vec2 start, vec2 end, float width)\n{\n\tvec2 dir = start - end;\n\tfloat lngth = length(dir);\n\tdir \/= lngth;\n\tvec2 proj = max(0.0, min(lngth, dot((start - p), dir)))*dir;\n\treturn length( (start - p) - proj ) - (width \/ 2.0);\n}\n\nfloat fillMask(float dist)\n{\n\treturn clamp(-(dist+0.01)*100.0, 0.0, 1.0);\n}\n\nfloat innerBorderMask(float dist, float width)\n{\n\tfloat alpha1 = clamp(dist + width, 0.0, 1.0);\n\tfloat alpha2 = clamp(dist, 0.0, 1.0);\n\treturn alpha1 - alpha2;\n}\n\/\/-----------------------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/iResolution.xy;\n    vec2 p = -1. + 2.*uv;\n    p.x *= iResolution.x \/ iResolution.y;\n    \n    \/\/ animation\n    float time = mod(iGlobalTime, 11.5);\n    float heyes = smoothstep(0.1, 0.9, time);\n    heyes = mix(heyes, -1.12, smoothstep(1.2, 2.6, time));\n    heyes *= 1. - smoothstep(3.16, 3.7, time);\n    float veyes = -0.2*smoothstep(0.2, 0.9, time);\n    veyes = mix(veyes, -0.1, smoothstep(1.2, 1.9, time));\n    veyes = mix(veyes, -0.2, smoothstep(1.9, 2.6, time));\n    veyes = mix(veyes, 1., smoothstep(2.7, 3.7, time));\n    veyes *= 1. - smoothstep(4.3, 5.3, time);\n    float smile = smoothstep(5.1, 6.7, time);\n    smile *= 1. - smoothstep(9., 11., time);\n    \n    \/\/ bg\n    uv -= vec2(0.5, 0.55);\n    uv *= 1.6;\n    float f = length(uv);\n    vec3 col = mix(vec3(0.65,0.5, 0.6), vec3(0.1,0.15,0.2), f);\n    \n    p *= 200.;\n    vec2 p2 = p;\n    p2.x = abs(p2.x);\n    \n    \/\/ eyes\n    float d = circleFill((p2 + vec2(-125, -58))+50.*dot(uv, uv), 38.);\n    \n    \/\/ mouth\n    float d2 = circleFill(p+vec2(0., -230.+smile*65.), 250.);  \n    d2 = max(d2, circleFill(p2+vec2(28.*smile, 868.-smile*28.), 850.));   \n\td = min(d, d2);\n    col = mix(col, vec3(1, 1, 0.97), fillMask(d));\n\tcol = mix(col, vec3(0.1), innerBorderMask(d, 2.));\n    \n    \/\/ pupils\n    d = circleFill(vec2(abs(p.x + 13.*heyes)-121.,p.y -50.-18.*veyes), 15.);\n    \n    \/\/ teeth\n    float td = 8.;\n    float d3 = circle(vec2(abs(p.x + td)+368.,p.y+34.), 400., 0.5);\n    d3 = min(d3, circle(vec2(abs(p.x + td)+152.,p.y+36.), 240., 0.5));\n    d3 = min(d3, circle(vec2(abs(p.x + td)-56.,p.y+30.), 80., 0.5));\n    d2 = max(d2, d3);\n    d = min(d, d2);\n    \n    \/\/ whiskers\n    d = min(d, line(p2, vec2(135.+smile*40.,  -5.+smile*10.), vec2(230.+smile*40., smile*40.), 1.));\n    d = min(d, line(p2, vec2(140.+smile*50.,-20.+smile*10.), vec2(245.+smile*50.,-35.+smile*40.), 1.));\n    d = min(d, line(p2, vec2(140.+smile*60.,-35.+smile*10.), vec2(250.+smile*50.,-70.+smile*30.), 1.));\n    \n    \/\/ nose\n    d2 = circleFill(p*vec2(1.0, 4.0+0.004*p2.x) + vec2(0, -120. -smile*4.*10.), 40.);\n    d3 = circleFill(p + vec2(0, -24.-smile*10.), 12.);   \n    d2 = smoothMerge(d2, d3, 20.);\n    d = min(d, d2);\n    col = mix(col, vec3(0.1), fillMask(d));\n    col = mix(col, vec3(0.1), innerBorderMask(d, 2.));\n    \n    \/\/ eye reflections\n    d = circleFill(vec2(abs(p.x + 6. + 11.*heyes)-121.,p.y -56.- 16.*veyes), 4.5);\n    d = min(d, circleFill(vec2(abs(p.x + 5.5 + 11.*heyes)-121.,p.y -49.- 16.*veyes),3.));   \n\tcol = mix(col, vec3(1), fillMask(d));\n\tcol = mix(col, vec3(0.1), innerBorderMask(d, 2.));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":38,"channel":0}],"code":"float instrument( float freq, float time )\n{    \n    float y = 0.70*sin(6.2831*freq*time)*exp(-0.009*freq*time);\n    y += 0.20*sin(2.01*6.2831*freq*time)*exp(-0.007*freq*time);\n    y += 0.16*sin(4.01*6.2831*freq*time)*exp(-0.004*freq*time);\n    y *= clamp( time\/0.004, 0.0, 1.0 );\n\treturn y;\t\n}\n\n#define D(a) b+=a;x+=step(b,t)*(b-x);\n#define tint 0.014881\n\nvec2 mainSound( float time )\n{\n    float x = 0.0;\n    float y = 0.0;\n    float b = 0.0;\n    float t = time\/tint;\n\n    x = t; b = 0.0;\n    D(58.)D(48.)D(144.)D(48.)D(384.)D(144.)D(48.)D(144.)D(48.)\n    y += instrument(349.23, tint*(t-x) );\n\n    x = t; b = 0.0;\n    D(130.)D(216.)D(48.)D(240.)D(96.)D(168.)D(218.)D(48.)D(192.)\n    y += instrument(392.0, tint*(t-x) );\n\n    x = t; b = 0.0;\n    D(610.)\n    y += instrument(415.3, tint*(t-x) );\n\n    x = t; b = 0.0;\n    D(322.)D(96.)D(168.)D(504.)D(96.)  \n    y += instrument(466.16, tint*(t-x) );\n\n    x = t; b = 0.0;\n    D(442.)D(24.)D(24.)D(72.)D(648.)D(24.)D(24.)D(72.)\n    y += instrument(523.25, tint*(t-x) );\n\n    x = t; b = 0.0;\n    D(538.)D(768.)\n    y += instrument(587.33, tint*(t-x) );\n    \n    x = t; b = 0.0;\n    D(514.)D(768.)\n    y += instrument(622.25, tint*(t-x) );\n\n    x = t; b = 0.0;\n    D(10.)D(192.)D(504.)D(72.)D(192.)D(408.)\n    y += instrument(261.63, tint*(t-x) );\n    \n    x = t; b = 0.0;\n    D(34.)D(120.)D(72.)D(576.)D(120.)D(72.)D(408.)\n    y += instrument(311.13, tint*(t-x) );\n    \n    return vec2(0.2*y);\n}","name":"Sound","description":"","type":"sound"}]}}