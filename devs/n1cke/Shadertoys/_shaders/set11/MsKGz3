{"Shader":{"ver":"0.1","info":{"id":"MsKGz3","date":"1455695935","viewed":183,"name":"Britney mosaic","username":"FabriceNeyret2","description":"application of contrast-corrected blending https:\/\/www.shadertoy.com\/view\/lsKGz3#\non Britney's video.  Mouse control video region","likes":3,"published":3,"flags":0,"tags":["sprites"],"hasliked":0},"renderpass":[{"inputs":[{"id":12,"src":"\/presets\/vid01.webm","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ cf https:\/\/www.shadertoy.com\/view\/lsKGz3#\n\n\/\/ try textures random, checker, etc\n#define T(U) texture2D(iChannel0,U+m)\n#define mean vec4(65,54,46,1)\/255. \n\n#define K(U) smoothstep(.2, .0, length(U))      \/\/ smooth kernel\n#define rnd(i) fract(1e5*sin(i+vec2(0,73.17)))  \/\/ texture\n\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    O-=O;\n    vec2 R = iResolution.xy, r=R\/R.y, m=iMouse.xy\/R;\n    if (m==vec2(0)) m=vec2(.5);\n    \/\/ if (abs(U.x-R.x\/2.)<2.) return;\n\tU \/= R.y;\n    float s=0., s2=0., v;\n    for (float i=0.; i<150.; i++) \n    {\n        vec2 V = U-rnd(i)*r  + .1*cos(i+iDate.w+vec2(0,1.6)); \/\/ sprite position\n        v = K(V); s += v; s2 += v*v;                          \/\/ kernel and momentums\n\t    O += v*T(V);\n    }\n    \/\/ normalization\n    if     (false) \/\/(U.x<r.x\/2.)\n            O \/= s;                          \/\/ linear blend\n    else    O = mean + (O-s*mean)\/sqrt(s2);  \/\/ variance preserving blend\n}","name":"Image","description":"","type":"image"}]}}