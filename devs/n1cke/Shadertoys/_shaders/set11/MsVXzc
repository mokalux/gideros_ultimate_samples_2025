{"Shader":{"ver":"0.1","info":{"id":"MsVXzc","date":"1465875034","viewed":142,"name":"Moj prvi odtenek","username":"gunnarclovis","description":"My first random shader using glsl for the first time.","likes":0,"published":3,"flags":2,"tags":["camera","live"],"hasliked":0},"renderpass":[{"inputs":[{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":31,"src":"\/presets\/webcam.png","ctype":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":47,"src":"\/presets\/tex19.png","ctype":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"#define PI 3.1415\n\/\/ fragColor is RGBA output fragment per pixel\n\/\/ fragCoord is 2D xy input coordinate of each pixel\nvoid mainImage(out vec4 fragColor,\n               in vec2 fragCoord)\n{\n    float time = iGlobalTime;\n\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n\n    vec2 p = mod(uv, vec2(1.0) \/ iChannelResolution[0].xy);\n    float r = iSampleRate * .05;\n    mat2 m = mat2(1, cos(uv.x * r + time), cos(uv.y * r + time), 1);\n    vec4 n = texture2D(iChannel0, uv * m - p);\n    vec4 c = texture2D(iChannel1, uv);\n    float d = length(fragCoord.xy - iResolution.xy * .5) * iDate.x * .0001;\n    \n    int timeMod = int(mod(iGlobalTime, 4.0));\n    if(timeMod == 0)\n    {\n        c.rgb = sin(sin(mod(c.rgb, n.rgb) * PI * 2.0 + d) * PI * 2.0 + time + 2.0 * d);\n    }\n    else if(timeMod == 1)\n    {\n        c.rgb = cos(sin(mod(c.rgb, n.rgb) * PI * 2.0 + d) * PI * 2.0 + time + 2.0 * d);\n    }\n    else if(timeMod == 2)\n    {\n        c.rgb = sin(cos(mod(c.rgb, n.rgb) * PI * 2.0 + d) * PI * 2.0 + time + 2.0 * d);\n    }\n    else if(timeMod == 3)\n    {\n        c.rgb = cos(cos(mod(c.rgb, n.rgb) * PI * 2.0 + d) * PI * 2.0 + time + 2.0 * d);\n    }\n    \n    vec4 chan2 = texture2D(iChannel2, uv * m - p);\n    vec4 chan1 = texture2D(iChannel1, uv * m - p);\n    c.rgb = mix(c.rgb, chan2.rgb, chan1.rgb);\n\n    fragColor = c;\n}","name":"Image","description":"","type":"image"}]}}