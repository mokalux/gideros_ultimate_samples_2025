{"Shader":{"ver":"0.1","info":{"id":"MsySWd","date":"1467347873","viewed":148,"name":"Simple Metaballs Example","username":"kgn","description":"Simple metaball approach that uses blurred circles with clamping.","likes":4,"published":3,"flags":0,"tags":["metaballs"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"#define u_time iGlobalTime\n\nfloat smoothstepQuintic(float a, float b, float x) {\n    x = clamp((x - a)\/(b - a), 0.0, 1.0);\n    return x*x*x*(x*(x*6.0 - 15.0) + 10.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {  \n    float radius = 0.3;\n    vec2 center = vec2(0.5);\n  \tvec2 uv = (fragCoord.xy \/ iResolution.xy)-0.5;\n    uv.x *= iResolution.x\/iResolution.y;\n\n\tfloat len = length(uv);\n\n\tfloat size = 0.1;\n\tfloat speed = 1.8; \n\tvec2 p = uv+vec2(cos(u_time*speed)*radius, sin(u_time*speed)*radius);\n\tfloat metaballs = smoothstep(size, 0.0, length(p));\n\n\tsize = 0.14;\n\tspeed = 1.2;\n\tp = uv+vec2(cos(u_time*speed)*radius, sin(u_time*speed)*radius);\n\tmetaballs += smoothstep(size, 0.0, length(p));\n\n\tsize = 0.06;\n\tspeed = 0.6;\n\tp = uv+vec2(cos(u_time*speed)*radius, sin(u_time*speed)*radius);\n\tmetaballs += smoothstep(size, 0.0, length(p));\n\n\tsize = 0.12;\n\tspeed = 1.4;\n\tp = uv+vec2(cos(u_time*speed)*radius, sin(u_time*speed)*radius);\n\tmetaballs += smoothstep(size, 0.0, length(p));\n\n\tsize = 0.08;\n\tspeed = 2.4;\n\tp = uv+vec2(cos(u_time*speed)*radius, sin(u_time*speed)*radius);\n\tmetaballs += smoothstep(size, 0.0, length(p));\n\n\tsize = 0.1;\n\tspeed = 3.0;\n\tp = uv+vec2(cos(u_time*speed)*radius, sin(u_time*speed)*radius);\n\tmetaballs += smoothstep(size, 0.0, length(p));\n\n\tfragColor = vec4(smoothstepQuintic(0.9, 1.0, metaballs\/0.5));    \n}","name":"Image","description":"","type":"image"}]}}