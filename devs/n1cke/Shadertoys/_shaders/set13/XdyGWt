{"Shader":{"ver":"0.1","info":{"id":"XdyGWt","date":"1456901152","viewed":699,"name":"smin","username":"iq","description":"Showing how smin() is not associative. Yellow: smin(smin(a,b),c). Blue: smin(a,smin(b,c). Gray, min(min(a,b),c).","likes":9,"published":3,"flags":0,"tags":["2d","smin"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ more info: \n\/\/\n\/\/ http:\/\/iquilezles.org\/www\/articles\/smin\/smin.htm\n\/\/ http:\/\/iquilezles.org\/www\/articles\/distance\/distance.htm\n\nfloat smin( float a, float b, float k )\n{\n\tfloat h = clamp( 0.5 + 0.5*(b-a)\/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat ya( float x ) { return 0.8*sin(5.0*x); }\nfloat yb( float x ) { return exp(-5.0*x*x); }\nfloat yc( float x ) { return 0.5 + 0.5*x; }\n\nfloat func1( float x ) { return  min( min(ya(x),yb(x)),    yc(x));}\nfloat func2( float x ) { return smin(smin(ya(x),yb(x),0.7),yc(x),0.7);}\nfloat func3( float x ) { return smin(ya(x),smin(yb(x),yc(x),0.7),0.7);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    vec3 tot = vec3(0.0);\n    \n    float t = 3.0\/iResolution.y;\n    float eps = 0.0001;\n    \n    for( int i=0; i<8; i++ )\n    {\n        vec2  p = (-iResolution.xy + 2.0*(fragCoord+vec2(float(i)\/8.0,0.0)))\/iResolution.y;\n        \n        vec3 col = vec3( 0.15 );\n\n        {\n        float y = func1( p.x );\n        float dy = (y - func1( p.x+eps ))\/eps;\n        float d = abs(p.y-y) \/ sqrt(1.0+dy*dy);\n        col = mix( col, vec3(0.5,0.5,0.5), 1.0-smoothstep( 0.0, t, d ) );\n        }\n        {\n        float y = func2( p.x );\n        float dy = (y - func2( p.x+eps ))\/eps;\n        float d = abs(p.y-y) \/ sqrt(1.0+dy*dy);\n        col = mix( col, vec3(1.0,1.0,0.0), 1.0-smoothstep( 0.0, t, d ) );\n        }\n        {\n        float y = func3( p.x );\n        float dy = (y - func3( p.x+eps ))\/eps;\n        float d = abs(p.y-y) \/ sqrt(1.0+dy*dy);\n        col = mix( col, vec3(0.0,0.5,1.0), 1.0-smoothstep( 0.0, t, d ) );\n        }\n        \n        tot += col;\n    }\n    \n    tot \/= 8.0;\n    \n    fragColor = vec4( tot, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}}