{"Shader":{"ver":"0.1","info":{"id":"4slGWn","date":"1367370970","viewed":2938,"name":"Texture - LOD","username":"iq","description":"This shows how to select a mip level in a texture. Besides having advanced uses in sampling artifacts avoidance, it can also be used as a cheap way to get a textures box-blurred for free (useful for fake depth of field effects, for example).","likes":32,"published":3,"flags":0,"tags":["2d","texture","lod","mipmap"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ The texture2D() call accepts a mip level offset as an optional parameter, which\n\/\/ allows one to sample from different LODs of the texture. Besides being handy in\n\/\/ some special situations, it also allows you to fake (box) blur of textures without\n\/\/ having to perform a blur youtself. This has been traditionally used in demos and\n\/\/ games to fake deph ot field and other similar effects in a very cheap way.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\t\n\tfloat lod = (5.0 + 5.0*sin( iGlobalTime ))*step( uv.x, 0.5 );\n\t\n\tvec3 col = texture2D( iChannel0, vec2(uv.x,1.0-uv.y), lod ).xyz;\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}