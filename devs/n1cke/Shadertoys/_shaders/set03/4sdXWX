{"Shader":{"ver":"0.1","info":{"id":"4sdXWX","date":"1461828035","viewed":355,"name":"Mandelbrot - M1 and M2","username":"iq","description":"The convergent region of the Mandelbrot set (M1, in yellow) and the period-2 region (M2, in blue) have analytical description and don't need iteration to be identified. More info: [url]http:\/\/iquilezles.org\/www\/articles\/mset_1bulb\/mset1bulb.htm[\/url]","likes":1,"published":3,"flags":0,"tags":["2d","mandelbrot","analytical"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Created by inigo quilez - iq\/2016\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ The convergent region of the Mandelbrot set (M1, in yellow) and the period-2 region \n\/\/ (M2, in blue) have analytical description and don't need of iteration to be identified. \n\/\/ Naturally, the Mset cannot overla the exterior of a disk of radious 2 (in green)\n\n\/\/ More info: http:\/\/iquilezles.org\/www\/articles\/mset_1bulb\/mset1bulb.htm\n    \nvec3 render( in vec2 fragCoord )\n{\n    \t\n    vec2 uv = (-iResolution.xy + 2.0*fragCoord) \/ iResolution.y;\n\n    vec2 c = uv*1.2 - vec2(0.65,0.0);\n    \n    float c2 = dot(c, c);\n    float s1 = 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0;\n    float s2 = 16.0*(c2+2.0*c.x+1.0) - 1.0;\n    \n    \/\/ early skip computation inside M1\n    if( s1 < 0.0 ) return vec3(1.0,0.6,0.1);\n    \/\/ early skip computation inside M2\n    if( s2 < 0.0 ) return vec3(0.2,0.6,1.0);\n    \/\/ early skip computation outside |c|>2\n    if( c2 > 4.0 ) return vec3(0.2,1.0,0.6);\n    \n    vec2 z = vec2(0.0, 0.0);\n\n    float n = 0.0;\n    for( int i = 0; i<256; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n\n        if( dot(z,z) > 4.0 )\n        {\n        \tn = float(i);\n            break;\n        }\n    }\n    \n    float f = n \/ 64.0;\n    return vec3( f, f, f );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col0 = render( fragCoord+vec2(0.0,0.0) );\n    vec3 col1 = render( fragCoord+vec2(0.5,0.0) );\n    vec3 col2 = render( fragCoord+vec2(0.0,0.5) );\n    vec3 col3 = render( fragCoord+vec2(0.5,0.5) );\n    vec3 col = 0.25*(col0 + col1 + col2 + col3);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}}