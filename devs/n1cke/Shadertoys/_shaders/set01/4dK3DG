{"Shader":{"ver":"0.1","info":{"id":"4dK3DG","date":"1456197599","viewed":265,"name":"Basic Blend Modes","username":"jackdavenport","description":"Different modes of blending. Change BLEND_MODE to change the blend technique.","likes":0,"published":3,"flags":0,"tags":["blending"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":6,"src":"\/presets\/tex05.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ 0 = Multiply\n\/\/ 1 = Screen\n\/\/ 2 = Overlay\n#define BLEND_MODE 0\n\nvec3 blend(vec3 a, vec3 b) {\n \n    #if BLEND_MODE == 1\n    return 1. - ((1. - a) * (1. - b));\n    #elif BLEND_MODE == 0\n    return a * b;\n    #elif BLEND_MODE == 2\n    if(a.x < .5 && a.y < .5 && a.z < .5){\n        return 2. * a * b;\n    }\n    return 1. - 2.*(1.-a)*(1. - b);\n    #endif\n    \n    return a;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec3  a = texture2D(iChannel0, uv).xyz;\n    vec3  b = texture2D(iChannel1, uv).xyz;\n    \n    fragColor.xyz = blend(a,b);\n}","name":"Image","description":"","type":"image"}]}}