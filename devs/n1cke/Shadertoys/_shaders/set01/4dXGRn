{"Shader":{"ver":"0.1","info":{"id":"4dXGRn","date":"1358124981","viewed":2414,"name":"Deform - star","username":"iq","description":"A GLSL version of the oldschool 2D deformation effect","likes":13,"published":3,"flags":0,"tags":["procedural","2d","planedeformation"],"hasliked":0},"renderpass":[{"inputs":[{"id":9,"src":"\/presets\/tex08.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec3 sqr( vec3 x ) { return x*x; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = -1.0 + 2.0 * fragCoord.xy \/ iResolution.xy;\n    float a = atan(p.y,p.x);\n    float r = sqrt(dot(p,p));\n    float s = r * (1.0+0.5*cos(iGlobalTime*0.5));\n\n    vec2 uv = 0.02*p;\n    uv.x +=                  .03*cos(-iGlobalTime+a*4.0)\/s;\n    uv.y += .02*iGlobalTime +.03*sin(-iGlobalTime+a*4.0)\/s;\n    uv.y += r*r*0.025*sin(2.0*r);\n \n    vec3 col = texture2D( iChannel0, 0.25*uv).xyz  * vec3(1.0,0.8,0.6);\n    col += sqr(texture2D( iChannel0, 0.50*uv).xxx) * vec3(0.7,1.0,1.0);\n\n    col *= 2.0*r;\n\tcol *= 0.5 + 0.5*pow(clamp(1.0-0.75*r,0.0,1.0),0.5);\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}}