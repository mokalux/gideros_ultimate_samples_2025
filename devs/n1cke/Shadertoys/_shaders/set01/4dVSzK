{"Shader":{"ver":"0.1","info":{"id":"4dVSzK","date":"1465409560","viewed":237,"name":"nyan cat godrays","username":"robobo1221","description":"Just a test on making godrays","likes":4,"published":3,"flags":0,"tags":["nyan","godrays","cat"],"hasliked":0},"renderpass":[{"inputs":[{"id":14,"src":"\/presets\/tex14.png","ctype":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"#define Density 1.0\n#define Num_Steps 64.0\n\nvec3 getTexure(vec2 coord){\n\tvec4 t = texture2D(iChannel0,coord.st);   \n    return t.rgb * t.a; \n}\n\nfloat getNoiseTexture(vec2 coord){\n\treturn texture2D(iChannel1, coord.xy * 2.0).r;\n}\n\nvec3 getRays(vec2 coord, out float mask){\n    \n    const int numSteps = int(Num_Steps * Density);\n    int weight = 0;\n    \n    vec3 gr = vec3(0.0);\n    \n    vec2 mouseCoord = coord.xy - (iMouse.xy \/ iResolution.xy);\n    \n    vec2 delta = (mouseCoord) * (Density \/ float(numSteps));\n    vec2 customTexcoord = coord.st;\n    \n    float visibility = 1.0-sqrt(pow(mouseCoord.x,2.0) + pow(mouseCoord.y,2.0));\n    visibility = pow(visibility,1.0);\n    visibility += pow(visibility,2.0);\n    visibility = clamp(visibility,0.0,1.0);\n    visibility = 1.0;\n\t\n    for(int i = 0; i < numSteps; i++){\n        \n        customTexcoord -= delta;\n    \tfloat noise = getNoiseTexture(customTexcoord);\n        \n        gr += getTexure(customTexcoord.st + delta * noise);\n        \n        weight++;\n    }\n    \n    gr \/= float(weight);\n    gr *= visibility;\n    mask = (gr.r + gr.g + gr.b) \/ 3.0;\n    mask = pow(mask,2.2);\n    gr *= mask;\n    gr = max(gr,0.0);\n    \n    return gr;\n    \n}\n\nvec3 getRaysSecondPass(vec2 coord, out float mask){\n    \n    const int numSteps = int(Num_Steps * Density);\n    int weight = 0;\n    \n    vec3 gr = vec3(0.0);\n    \n    vec2 mouseCoord = coord.xy - (iMouse.xy \/ iResolution.xy);\n    \n    vec2 delta = (mouseCoord) * (Density \/ float(numSteps));\n    vec2 customTexcoord = coord.st;\n    \n    float visibility = 1.0-sqrt(pow(mouseCoord.x,2.0) + pow(mouseCoord.y,2.0));\n    visibility = pow(visibility,1.0);\n    visibility += pow(visibility,2.0);\n    visibility = clamp(visibility,0.0,1.0);\n    visibility = 1.0;\n\t\n    for(int i = 0; i < numSteps; i++){\n        \n        customTexcoord -= delta;\n    \tfloat noise = getNoiseTexture(customTexcoord);\n        \n        gr += getNoiseTexture(customTexcoord.st + delta * noise);\n        \n        weight++;\n    }\n    \n    gr \/= float(weight);\n    gr *= visibility;\n    mask = (gr.r + gr.g + gr.b) \/ 3.0;\n    mask = pow(mask,2.2);\n    gr *= mask;\n    gr = max(gr,0.0);\n    \n    return gr;\n    \n}\n    \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float grMask;\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = vec4(getTexure(uv) + (getRays(uv, grMask) * getRaysSecondPass(uv, grMask) * pow(5.0,2.0)),1.0);\n    \/\/fragColor = vec4(getTexure(uv) + (getRays(uv, grMask) * 3.0),1.0);\n    \/\/fragColor = vec4((getRays(uv, grMask) * getRaysSecondPass(uv, grMask) * pow(5.0,2.0)),1.0);\n}","name":"Image","description":"","type":"image"}]}}