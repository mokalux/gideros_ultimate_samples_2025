{"Shader":{"ver":"0.1","info":{"id":"4ddXRM","date":"1458355860","viewed":224,"name":"taquin \/ 63 puzzle","username":"FabriceNeyret2","description":"click on empty cell neighbors to sort the image right.\n\nSuggestion: change the image by a video :-)","likes":3,"published":3,"flags":32,"tags":["game","puzzle","taquin"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ choose your favorite texture or video in channel 1.\n\/\/ suggestion:  street image, singer video.\n\nvoid mainImage( out vec4 O, vec2 U ) { \n    vec2 R = iResolution.xy;\n    O = texture2D(iChannel0, U\/R);               \/\/ mapping scrampling\n    O = O.x>0. ? texture2D(iChannel1, O.xy)      \/\/ choosen texture\n               : vec4(sin(30.*iDate.w),0,0,0);   \/\/ cursor\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":28,"src":"\/presets\/tex15.png","ctype":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":257,"channel":0}],"code":"#define N 8.  \/\/ 8\/4\/2 . size of puzzle = N*N\n#define T(i,j) texture2D(iChannel0, U + vec2(i,j)\/N)\n#define is0(i,j) T(i,j).z == 0.     \n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U \/= R;\n    if (iFrame<10) {                           \/\/ O = permut(u,v) mapping , tile 0 keeps 0\n        O = floor(texture2D(iChannel1,U*N\/8.+.5)*63.+.5);  \/\/ permutation tile texture\n        O = floor(O*N*N\/64.)\/N;\n        if (O.x>0.)  O.xy = fract(N*U)\/N + vec2 ( fract(O.x), floor(O.x)\/N );\n    } \n    else {                                     \/\/ let's play\n        O = texture2D(iChannel0,U);\n        vec4 M=iMouse; \n        if (M.xy==vec2(0)) M = vec4(R*fract(4e5*sin(iDate.w*vec2(1,17.7))),1,0); \/\/ demo mode\n        if (M.z>0.) {                          \/\/ mouse click\n            vec2 m = ceil(M.xy\/R*N) - ceil(U*N);             \/\/ tile offset\n            if (length(m)<=1. && is0(0,0) ) O = T(m.x,m.y);  \/\/ black replaced by clicked neighbor\n            else if ( m==vec2(0) && (is0(1,0) ||  is0(-1,0) || is0(0,1) || is0(0,-1))) O-=O; \/\/ which gets black\n        }\n    }  \n}","name":"Buf A","description":"","type":"buffer"}]}}