{"Shader":{"ver":"0.1","info":{"id":"ld3Sz7","date":"1458314166","viewed":374,"name":"Basic Conway's Game of Life","username":"matthewwachter","description":"This is pretty much just a rip off of other people's work. I just wanted to post a very simple, legible, and well commented example for the purpose of education.\n\nR - Reset\nMouse - Interact","likes":1,"published":3,"flags":48,"tags":["feedback","buffer","conway","gameoflife","conways"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfragColor = texture2D(iChannel0,fragCoord\/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":257,"channel":0}],"code":"#define pixel (1.0 \/ iResolution.xy)\n#define brushSize 20.0\n\n\/\/noise see https:\/\/www.shadertoy.com\/view\/ltB3zD\nfloat snoise(in vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\/\/ set value for r key to reset with\nconst int Key_R = 82;\n\n\/\/ process keyboard input\nbool ReadKey( int key )\/\/, bool toggle )\n{\n\tbool toggle = false;\n\tfloat keyVal = texture2D( iChannel1, vec2( (float(key)+.5)\/256.0, toggle?.75:.25 ) ).x;\n\treturn (keyVal>.5)?true:false;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\/\/ retrieve the texture coordinate\n    vec2 c = fragCoord.xy \/ iResolution.xy;\n    \/\/ and the current pixel\n    vec3 current = texture2D(iChannel0, c).rgb;\n    \/\/ set the neighbours value to 0\n    vec3 neighbours = vec3(0.0);\n    \n    \/\/ check to seee if we are at the start of the timeline or if the R key is pressed.\n    if(iGlobalTime > 0.1 && !ReadKey(Key_R))\n    {\n        \/\/ draw a circle if the mouse is clicked\n        if(distance(iMouse.xy, fragCoord) < brushSize && iMouse.z > .0)\n        {\n        \tfragColor = vec4(1.);\n        }\n        else\n        {\n            \/\/ count the neightbouring pixels with a value greater than zero\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2(-1,-1)).rgb, vec3(0.0)));\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2(-1, 0)).rgb, vec3(0.0)));\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2(-1, 1)).rgb, vec3(0.0)));\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2( 0,-1)).rgb, vec3(0.0)));\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2( 0, 1)).rgb, vec3(0.0)));\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2( 1,-1)).rgb, vec3(0.0)));\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2( 1, 0)).rgb, vec3(0.0)));\n            neighbours += vec3(greaterThan(texture2D(iChannel0, c + pixel*vec2( 1, 1)).rgb, vec3(0.0)));\n\n            \/\/ check if the current pixel is alive\n            vec3 live = vec3(greaterThan(current, vec3(0.0)));\n\n            \/\/ resurect if we are not live, and have 3 live neighrbours\n            current += (1.0-live) * vec3(equal(neighbours, vec3(3.0)));\n\n            \/\/ kill if we do not have either 3 or 2 neighbours\n            current *= vec3(equal(neighbours, vec3(2.0))) + vec3(equal(neighbours, vec3(3.0)));\n\n            \/\/ fade the current pixel as it ages\n            current -= vec3(greaterThan(current, vec3(0.4)))*0.05;\n\n            \/\/ write out the pixel\n            fragColor = vec4(current, 1.0);\n        }\n    }\n    \/\/Generate some noise to get things going\n    else\n    {\n        fragColor = vec4(snoise(fragCoord) > 0.8 ? 1.0 : 0.0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}}