{"Shader":{"ver":"0.1","info":{"id":"ldK3WG","date":"1456256184","viewed":235,"name":"Colored Rings","username":"Cubeleo","description":"Just some clean colored rings to warm up my brain for the day.","likes":3,"published":3,"flags":0,"tags":["2d"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/iq's smooth HSV to RGB\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); \/\/ cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv -= vec2(.5);\n    uv.x *= (iResolution.x \/ iResolution.y);\n    \n    float d = distance(uv, vec2(0));\n    \n    \/\/ scale the figure\n    d *= 30.;\n    \n    float hue = floor(d) \/ 20. + iGlobalTime * .1;\n    \n    float value = .9;\n    \n    \/\/ create space between the rings\n    value *= smoothstep(0., .2, fract(d));\n    value *= smoothstep(.9, .7, fract(d));\n    \n    \/\/ limit the number of rings\n    value *= float(d > 2.) * float(d < 13.);\n    \n    vec3 color = hsv2rgb_smooth(vec3(hue, .75, value));\n    \n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}}