{"Shader":{"ver":"0.1","info":{"id":"lsKXDw","date":"1464834874","viewed":132,"name":"hjyRaytracingTest01","username":"hongjeongyun","description":"Sphere Light","likes":0,"published":3,"flags":0,"tags":["hjy"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\/\/uv \u00ed\u201d\u00bd\u00ec\u2026\u20ac \u00ec\u00a2\u0152\u00ed\u2018\u0153\u00ea\u00b0\u2019\n    \n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    float aspectRatio = iResolution.x \/ iResolution.y; \/\/ \u00e3\u2026\u2021\u00e3\u2026\u2021 \u00ec\u00a2\u2026\u00ed\u0161\u00a1\u00eb\u00b9\u201e\n    uv *= 2.0; \/\/ \u00ed\u0081\u00ac\u00ea\u00b8\u00b0\u00eb\u00a5\u00bc \u00eb\u2018\u0090\u00eb\u00b0\u00b0\u00eb\u00a1\u0153 \u00ec\u017e\u00a1\u00ec\u009d\u0152 x y \u00ec\u2014\u0090  2\u00ea\u00b3\u00b1\n    uv -= vec2(1.0,1.0); \/\/ \u00ea\u00b0\u0081\u00ea\u00b0\u0081 1\u00ec\u009d\u201e \u00eb\u00b9\u00bc\u00ec\u00a4\u0152\n    uv.x *= aspectRatio; \/\/ \u00ec\u203a\u0090\u00ec\u00a0\u0090\u00ec\u009d\u201e \u00ec\u017e\u00a1\u00ec\u2022\u02dc\u00ec\u0160\u00b4\n    \n    \n    \/\/ ray \u00ec\u2122\u20ac \u00ec\u00a4\u2018\u00ec\u2039\u00ac\u00ec\u009d\u201e - \u00ed\u2122\u201d \u00ed\u2022\u02dc\u00eb\u00a9\u00b4 \u00ea\u00b8\u00b0\u00ec\u00a4\u20ac\u00eb\u00b0\u00a9\u00ed\u2013\u00a5\u00ec\u009d\u201e \u00eb\u00b0\u201d\u00ea\u00bf\u02c6\n    \/\/ \u00eb\u009d\u00bc\u00ec\u009d\u00b4\u00ed\u0160\u00b8 \u00ea\u00b4\u2018\u00ec\u203a\u0090 \u00ec\u0153\u201e\u00ec\u00b9\u02dc\n    vec3 light = vec3(-1.0,1.0,-2.0);\n    \n    \n    vec3 sphere = vec3(0.0,0.0 + 1.0 * sin(iGlobalTime * 4.0),-5.0);\n    \n    \/\/vec3 sphere = vec3(0.0,0.0,-5.0);  \/\/ \u00ea\u00b5\u00ac\u00ec\u009d\u02dc \u00ec\u00a4\u2018\u00ec\u2039\u00ac\u00ec\u009d\u201e \u00ec\u017e\u00a1\u00ec\u009d\u0152 \u00ec\u203a\u0090\u00ec\u00a0\u0090(\u00ec\u00b9\u00b4\u00eb\u00a9\u201d\u00eb\u009d\u00bc)\u00eb\u00b6\u20ac\u00ed\u201e\u00b0z \u00ea\u00b1\u00b0\u00eb\u00a6\u00ac\u00eb\u00a7\u0152\u00ed\u0081\u00bc \u00eb\u2013\u00a8\u00ec\u2013\u00b4\u00ec\u00a7\u201e\u00ea\u00b3\u00b3\n    \n    float R = 1.0; \/\/ \u00e3\u2026\u2021\u00e3\u2026\u2021 \u00eb\u00b0\u02dc\u00ec\u00a7\u20ac\u00eb\u00a6\u201e\n    \n    vec3 ray = vec3(uv,-2.0); \/\/ z  \u00ea\u00b1\u00b0\u00eb\u00a6\u00ac \u00ec\u2022\u017e\u00ec\u2014\u0090 \u00ea\u00b0\u20ac\u00ec\u0192\u0081\u00ec\u009d\u02dc \u00ec\u0160\u00a4\u00ed\u0081\u00ac\u00eb\u00a6\u00b0\u00ec\u009d\u00b4 \u00ec\u017e\u02c6\u00ec\u0160\u00b4\n    \/\/dot \u00eb\u201a\u00b4\u00ec\u00a0\u0081\u00ed\u2022\u00a8\u00ec\u02c6\u02dc\n    \n    float A = dot(ray,ray);\n    float B = -2.0 * dot(ray, sphere);\n    float C = dot(sphere, sphere) - R * R;\n    \/\/\u00ed\u0152\u0090\u00eb\u00b3\u201e\u00ec\u2039\u009d D\n    float D = B * B - 4.0*A*C;\n    \n    \/\/\u00eb\u00b0\u201d\u00eb\u2039\u00a5\u00ec\u0161\u00a9\n    \n    vec3 n = vec3(0.0, 1.0, 0.0); \/\/ \u00ed\u008f\u2030\u00eb\u00a9\u00b4\u00ec\u009d\u02dc \u00ec\u02c6\u02dc\u00ec\u00a7\u0081\u00eb\u00b0\u00a9\u00ed\u2013\u00a5\u00ec\u009d\u201e \u00eb\u201a\u02dc\u00ed\u0192\u20ac\u00eb\u201a\u00b4\u00eb\u0160\u201d \u00eb\u00b2\u00a1\u00ed\u201e\u00b0 (\u00eb\u2026\u00b8\u00eb\u00a7\u0090)\n    \/\/\u00ed\u008f\u2030\u00eb\u00a9\u00b4\u00ec\u009d\u00b4 \u00ec\u203a\u0090\u00ec\u00a0\u0090\u00ec\u0153\u00bc\u00eb\u00a1\u0153\u00eb\u00b6\u20ac\u00ed\u201e\u00b0 \u00eb\u2013\u00a8\u00ec\u2013\u00b4\u00ec\u00a7\u201e \u00eb\u00b6\u20ac\u00ed\u02dc\u00b8\u00ec\u017e\u02c6\u00eb\u0160\u201d \u00ea\u00b1\u00b0\u00eb\u00a6\u00ac\n    float Dist = -1.0;\n    \n    \n    \n    vec3 color;\n    \n    if(D > 0.0) \/\/ \u00ec\u00b6\u00a9\u00eb\u008f\u0152\u00ec\u009d\u00b4 \u00eb\u0090\u02dc\u00ec\u2014\u02c6\u00eb\u2039\u00a4\u00eb\u00a9\u00b4\n    {\n        color = vec3(1.0,1.0,0.0);\n        \/\/ -B  \u00eb\u0160\u201d \u00ec\u2013\u2018\u00ec\u02c6\u02dc\u00ea\u00b0\u20ac \u00eb\u0090\u02dc\u00ea\u00b3\u00a0 \u00ec\u00a7\u20ac\u00ea\u00b8\u02c6\u00ec\u009d\u20ac \u00ec\u009d\u00b4\u00ea\u00b0\u2019\u00ec\u009d\u00b4 \u00ec\u017e\u2018\u00ec\u2022\u201e\u00ec\u00a0\u00b8\u00ec\u2022\u00bc \u00ed\u2022\u02dc\u00eb\u00af\u20ac\u00eb\u00a1\u0153 - \u00ed\u2022\u00b4\u00ec\u00a4\u0152\n        float t = (-B - sqrt(D) ) \/ (2.0 * A); \/\/1\n        \n        vec3 pos = t * ray; \/\/ P\n        \/\/Normal Vec\n        vec3 N = normalize(pos - sphere);\n        \/\/color = pos;\n        \/\/\u00eb\u009d\u00bc\u00ec\u009d\u00b4\u00ed\u0160\u00b8 \u00eb\u00b2\u00a1\u00ed\u201e\u00b0\n        vec3 L = normalize(light - pos);\n        float diffuse = max( dot(N,L), 0.0); \/\/ \u00ec\u009d\u0152\u00ec\u02c6\u02dc \u00eb\u00ac\u00b4\u00ec\u2039\u0153 \/\/ max \u00ec\u00b5\u0153\u00eb\u0152\u20ac\u00ea\u00b0\u2019\n        \/\/color = N;\n        color *= diffuse;\n    }\n    else\n    {\n        \/\/\u00eb\u00b0\u201d\u00eb\u2039\u00a5\u00eb\u00a7\u0152\u00eb\u201c\u00a4\u00ea\u00b8\u00b0 \n        float d = dot(ray, n); \/\/ \u00eb\u201a\u00b4\u00ec\u00a0\u0081\u00ea\u00b0\u2019\n        if(d < 0.0)\n        {\n           color = vec3(0.0, 1.0,0.0);\n           \n           \/\/ 2 \u00ec\u009d\u00b4\u00eb\u00b6\u20ac\u00eb\u00b6\u201e\u00ec\u009d\u00b4 \u00eb\u00b0\u2013\u00ec\u0153\u00bc\u00eb\u00a1\u0153 \u00eb\u201a\u02dc\u00ec\u02dc\u00a4\u00ea\u00b3\u00a0 1 \u00ea\u00b3\u00bc \u00eb\u00b9\u201e\u00ea\u00b5\u0090\u00eb\u00a5\u00bc \u00ed\u2022\u02dc\u00eb\u00a9\u00b4 \u00ec\u00a0\u0153\u00eb\u0152\u20ac\u00eb\u00a1\u0153 \u00eb\u00b0\u201d\u00eb\u2039\u00a5\u00ec\u2014\u0090 \u00ed\u0152\u0152\u00eb\u00ac\u00bb\u00ed\u017e\u02dc\n           float t = Dist \/ d;\n           \/\/\u00ea\u00b5\u0090\u00ec\u00a0\u0090 pos \n           vec3 pos = t * ray;\n           \/\/\u00eb\u00b0\u201d\u00eb\u2039\u00a5 \u00ec\u00a1\u00b0\u00eb\u00aa\u2026\n           \/\/\u00eb\u00b0\u201d\u00eb\u2039\u00a5\u00ec\u2014\u0090 \u00eb\u0152\u20ac\u00ed\u2022\u0153 \u00eb\u009d\u00bc\u00ec\u009d\u00b4\u00ed\u0160\u00b8 \u00eb\u00b2\u00a1\u00ed\u201e\u00b0 \u00ec\u0192\u02c6\u00eb\u00a1\u0153\u00ea\u00b5\u00ac\u00ed\u2022\u00a8\n           vec3 L = normalize(light - pos);\n            \n           float diffuse = max( dot(L,n), 0.0);\n           color *= diffuse;\n        }\n        else\n        {\n            color = vec3(0.5,0.5,1.0);\n        }\n    }\n    \n    fragColor = vec4(color,1.0);\n    \n    \/\/fragColor = vec4(uv,0.5+0.5*sin(iGlobalTime),1.0);\n}","name":"Image","description":"","type":"image"}]}}