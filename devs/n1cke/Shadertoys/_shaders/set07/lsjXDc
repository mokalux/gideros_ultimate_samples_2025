{"Shader":{"ver":"0.1","info":{"id":"lsjXDc","date":"1456216271","viewed":560,"name":"acos","username":"iq","description":"Approximation for acos(), by Sebastien Lagarde","likes":6,"published":3,"flags":0,"tags":["2d","acos","approximation"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Created by inigo quilez - iq\/2016\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ acos() approximation by Sebastien Lagarde\n\n\/\/ In yellow, the real acos()\n\/\/ In red, the approximation\n\n\/\/ Mathematica: F[x_] = Sqrt[1 - x] * MiniMaxApproximation[ArcCos[x] \/ Sqrt[1 - x], { x, { 0, 0.71}, 1, 0}][[2,1]]\n\/\/ Note interval is [0, 1] but there is a singularity at 1. Experimenting with various value \n\/\/ and plotting error show that 0.71 give the best approx here.\n\nfloat sacos( float y )\n{\n    float x = abs( clamp(y,-1.0,1.0) );\n    float z = (-0.168577*x + 1.56723) * sqrt(1.0 - x);\n    return mix( 0.5*3.1415927, z, sign(y) );\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    vec2  p = fragCoord.xy \/ iResolution.x;\n    p = vec2(-1.0,0.0) + p*vec2( 2.0, 3.1415927*iResolution.x\/iResolution.y );\n\n    vec3 col = vec3( 0.25 );\n    \n    \/\/ acos\n    float y = acos( p.x );\n    col = mix( col, vec3(1.0,1.0,0.0), 1.0 - smoothstep( 0.0, 6.0\/iResolution.x, abs( p.y - y ) ) );\n        \n    \/\/ approx acos\n    y = sacos( p.x );\n    col = mix( col, vec3(1.0,0.0,0.0), 1.0 - smoothstep( 0.0, 6.0\/iResolution.x, abs( p.y - y ) ) );\n    \n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}}