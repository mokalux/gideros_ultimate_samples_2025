{"Shader":{"ver":"0.1","info":{"id":"lsyXRK","date":"1465319934","viewed":515,"name":"Wide Angle","username":"mu6k","description":"Not really photo realistic rendering. Went with the flow. Ended up on a rather dry planet with no clouds.","likes":18,"published":3,"flags":96,"tags":["terrain","raymarch"],"hasliked":0},"renderpass":[{"inputs":[{"id":16,"src":"\/presets\/tex11.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":3550,"src":"https:\/\/soundcloud.com\/55-bpm\/clockwork-lives","ctype":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\n\nvec2 uvToTex(vec2 uv){\n\tuv.y-=0.05;\n\tuv *=iResolution.yy;\n    uv +=iResolution.xy*.5;\n    uv \/=iResolution.xy;\n    return uv;\n}\n\n\nvec3 sampleColor(vec2 uv){\n    return texture2D(iChannel2, uvToTex(uv)).xyz;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvo = fragCoord.xy \/ iResolution.xy;\n\tvec2 uv = (fragCoord.xy - iResolution.xy*.5) \/ iResolution.yy;\n    if (abs(uv.y)>.27) {\n        fragColor = vec4(0,0,0,1);\n        return;\n    }\n    uv.y+=0.05;\n    \n    vec4 fb = texture2D(iChannel2, uvToTex(uv));\n    float td = fb.w;\n    \n    \n    vec3 acc = vec3(0);\n    float motionBlurAmp =0.04;\n    vec4 noise = texture2D(iChannel1, (fragCoord+floor(iGlobalTime*vec2(12.0,56.0)))\/64.0);\n    \n    acc += sampleColor(uv*((noise.x+2.0)\/td*motionBlurAmp+1.0))*vec3(.4,.1,.1);\n    acc += sampleColor(uv*((noise.y+1.0)\/td*motionBlurAmp+1.0))*vec3(.3,.3,.1);\n    acc += sampleColor(uv*((noise.z+0.0)\/td*motionBlurAmp+1.0))*vec3(.2,.4,.2);\n    acc += sampleColor(uv*((noise.w-1.0)\/td*motionBlurAmp+1.0))*vec3(.1,.3,.3);\n    acc += sampleColor(uv*((noise.x-2.0)\/td*motionBlurAmp+1.0))*vec3(.1,.1,.4);\n    \n    \n    vec3 c = acc.xyz;\n    c*=3.0;\n    c-=0.04;\n    c = max(c,.0);\n    c=(vec3(1.3,1.3,1.3)*c)\/(vec3(1)+c);\n    c=sqrt(max(c,.0));\n    c+=noise.xyz*0.01;\n    \n    fragColor = vec4(c, 1.0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":16,"src":"\/presets\/tex11.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":47,"src":"\/presets\/tex19.png","ctype":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":257,"channel":0}],"code":"\nfloat df ( in vec3 p){\n    float terra = p.y+1.0;\n    if (terra<2.0){\n        terra+=-texture2D(iChannel0, p.xz*0.04).r;\n        terra+=texture2D(iChannel0, p.xz*0.03+vec2(.4,.3)).r;\n        if (terra<0.1){\n        \tterra+=-pow(texture2D(iChannel0, p.xz*0.05+vec2(.4,.3)).r,4.0)*texture2D(iChannel0, p.xz*2.0).r*0.1;\n        }\n    }\n        \n    return terra;\n}\n\nvec3 nf(in vec3 p, in float theta){\n    vec2 e = vec2(theta, 0.0);\n    float c = df(p);\n    return normalize(vec3(c-df(p+e.xyy),c-df(p+e.yxy),c-df(p+e.yyx)));\n}\n#define LDIR normalize(vec3(9,-2,-6))\n#define ATMOS_COLOR vec3(.4,.5,.6)\n#define SUN_COLOR vec3(.9,.7,.4)\n\nvec3 skyColor(in vec3 d){\n    vec3 ldir = LDIR;\n    vec3 atmosColor = ATMOS_COLOR;\n    atmosColor = mix(atmosColor, vec3(.9,.5,.2), pow(dot(d,-ldir)*.5+.5,4.0));\n    atmosColor = mix(atmosColor, vec3(.9,.1,.1), pow(dot(d,-ldir)*.5+.5,16.0));\n    \/\/vec3 sun = SUN_COLOR*pow(dot(d,-ldir)*.5+.501,6960.0)*.03;\n\treturn (pow((1.0-abs(d.y)),2.0)*atmosColor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 noise = texture2D(iChannel1, (fragCoord+floor(iGlobalTime*vec2(12.0,56.0)))\/64.0);\n\tvec2 uv = ((fragCoord.xy+noise.xy*0.5) - iResolution.xy*.5) \/ iResolution.yy;\n    if (abs(uv.y)>.27){\n        fragColor = vec4(0,0,0,1);\n        return;\n    }\n    uv.y+=0.05;\n    \n    vec3 pos = vec3(0,0,-4.0+iGlobalTime);\n    vec3 dir = normalize(vec3(uv, 1));\n    \n    float d,td=.0;\n\tint it;\n    for(int i=0; i<150; i++){\n    \td = df(pos);\n        pos += d*dir;\n        td += d;\n        it = i;\n        if (d<0.001||d>100.0) break;\n    }\n    float sky = min(max(d*.5,.0),1.0);\n    vec3 ldir = LDIR;\n    vec3 atmosColor = ATMOS_COLOR;\n    atmosColor = mix(atmosColor, vec3(.9,.5,.2), pow(dot(dir,-ldir)*.5+.5,4.0));\n    atmosColor = mix(atmosColor, vec3(.9,.1,.1), pow(dot(dir,-ldir)*.5+.5,16.0));\n    vec3 sunColor = SUN_COLOR;\n    \n    float wf = (-df(pos-vec3(-1,0,0))+df(pos))*0.5;\n    wf=min(max(wf,0.0),1.0);\n    float w = (-df(pos-vec3(0,0,-1))+df(pos))*0.5;\n    w=min(max(w,0.0),1.0);\n    vec3 normal = normalize(nf(pos, 0.1)+nf(pos, 0.025));\n    float wfa = (df(pos)-df(pos+normal))*.5;\n    wfa=min(max(wfa,0.0),1.0);\n    float wfa2 = pow(wfa*1.5,8.0);\n    wfa2=min(max(wfa2,0.0),1.0);\n    \n    vec3 c;\n    float fog = min(max((pow(-1.0+pos.y,2.0)),.0)*0.004*td+td*0.005+0.001,1.0);\n    c=vec3(fog);\n    vec3 albedo = mix(mix(vec3(.6,.5,.3), vec3(.4,.6,.2), wf), vec3(.3,.3,.3),w);\n    albedo = mix(albedo, vec3(.9,.9,.4), wfa2);\n \n    \n    \n    \n    float sunDiffuse = (max(dot(ldir,normal),.0));\n    sunDiffuse = min(sunDiffuse, df(pos-ldir*.5)*2.0);\n    sunDiffuse = min(sunDiffuse, df(pos-ldir));\n    sunDiffuse = max(.0,sunDiffuse);\n    float atmosDiffuse = (dot(vec3(0,-1,0),normal)*.5+.5);\n    atmosDiffuse *= wfa*0.125;\n    \n    c = sunDiffuse*albedo*sunColor + atmosDiffuse*albedo*atmosColor*wfa;\n    c = mix(c,atmosColor,fog);\n    c = mix(c, skyColor(dir),sky);\n    \n\tfragColor = vec4(c,td);\n}","name":"Buf A","description":"","type":"buffer"}]}}