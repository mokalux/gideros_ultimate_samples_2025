{"Shader":{"ver":"0.1","info":{"id":"lsG3Rt","date":"1455813750","viewed":185,"name":"Cloud Blending","username":"goulart","description":"blends to images using fbm","likes":0,"published":3,"flags":0,"tags":["imageblending"],"hasliked":0},"renderpass":[{"inputs":[{"id":4,"src":"\/presets\/tex03.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define EPS\t\t.001\n#define PI\t\t3.14159265359\n#define RADIAN\t180. \/ PI\n#define SPEED\t25.\n\nfloat hash(vec2 p)\n{\n    return fract(sin(dot(p,vec2(127.1,311.7))) * 43758.5453123);\n}\n\nfloat noise(vec2 p)\n{\n    vec2 i = floor(p), f = fract(p); \n\tf *= f*(3.-2.*f);\n    \n    vec2 c = vec2(0,1);\n    \n    return mix(mix(hash(i + c.xx), \n                   hash(i + c.yx), f.x),\n               mix(hash(i + c.xy), \n                   hash(i + c.yy), f.x), f.y);\n}\n\nfloat fbm(in vec2 p)\n{\n\treturn\t.5000 * noise(p)\n\t\t   +.2500 * noise(p * 2.)\n\t\t   +.1250 * noise(p * 4.)\n\t\t   +.0625 * noise(p * 8.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n\n    float cloudVal = (fbm(p+iGlobalTime));\n    \n    vec3 backPx = texture2D( iChannel0, p ).rgb;\n    vec3 frontPx = vec3(0.3, 0.3, 0.3);\/\/ = texture2D( iChannel1, p ).rgb;\n    float alpha = mod(iGlobalTime, 1.0);\n    \n    vec3 rPx = mix(backPx, frontPx, cloudVal);\n    \n    fragColor = vec4( rPx ,1);\n}\n\n","name":"Image","description":"","type":"image"}]}}