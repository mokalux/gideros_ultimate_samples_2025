{"Shader":{"ver":"0.1","info":{"id":"MlcGRl","date":"1470817199","viewed":126,"name":"HV Splits","username":"benoitM","description":"Subdivision of space by alternating horizontal and vertical splits recusively","likes":0,"published":3,"flags":0,"tags":["abstract","recursive","split","zone"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"const int iter = 10;\n\n\nfloat partition (int i, int j)\n{\n    float a=sin(float(i*j)+iGlobalTime*float(j)*0.33);\n    return 0.25+(a+1.)*0.25;\n}\n\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 colorForZone (vec2 res)\n{\n    float t = res.x\/pow(2., float(iter))+res.y*0.15;\n    return palette(t,vec3(0.5),vec3(0.5),vec3(1.0),vec3(0.,0.33,0.66));\n}\n   \n\n\nvec2 HVdivide (vec2 p)\n{\n    int zone = 0;\n    int a=1;\n    \/\/float cc= cos(iGlobalTime*1.);\n    float ss= sin(iGlobalTime*0.23);\n    \n    for (int i=0;i<iter;i++)\n\t{\n\t\tfloat seuil = partition(zone,i);\n        \/\/float cc= cos(iGlobalTime*1.+float(zone));\n    \t\/\/float ss= sin(iGlobalTime*1.+float(zone));\n\n        float tt=p.x;\/\/cc*p.x+ss*p.y;\n        seuil-=ss*p.y;\n        float s=sign(tt-seuil);\n        s=(s+1.)*0.5;\n        zone+=a*int(s);\n        p.x =s*(p.x-seuil)\/(1.-seuil) + (1.-s) *p.x\/seuil;\n        a*=2;\n        p=vec2(p.y, 1.-p.x);\n    }\n    \n    return vec2(float(zone),1.-p.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec3 col = colorForZone(HVdivide(uv));\n\n    fragColor = vec4(col.xyz,1.);\n}\n\n","name":"Image","description":"","type":"image"}]}}