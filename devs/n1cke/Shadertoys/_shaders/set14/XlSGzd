{"Shader":{"ver":"0.1","info":{"id":"XlSGzd","date":"1431274100","viewed":839,"name":"ConvolutionMatrices","username":"SmartPointer","description":"Convolution matrices - You can change the strength in line 1 and the kernel in line 62.","likes":2,"published":3,"flags":0,"tags":["2d","filter","convolution"],"hasliked":0},"renderpass":[{"inputs":[{"id":36,"src":"\/presets\/vid03.webm","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"const float strength = 50.0;\n\nconst mat3 sharpenKernel = mat3(\n    vec3( 0, -1,  0),\n    vec3(-1,  5, -1),\n    vec3( 0, -1,  0)\n);\n\nconst mat3 edgeKernel = mat3(\n    vec3(-1, -1, -1),\n    vec3(-1,  8, -1),\n    vec3(-1, -1, -1)\n);\n\nconst mat3 blurKernel = mat3(\n    vec3(1.0\/9.0, 1.0\/9.0, 1.0\/9.0),\n    vec3(1.0\/9.0, 1.0\/9.0, 1.0\/9.0),\n    vec3(1.0\/9.0, 1.0\/9.0, 1.0\/9.0)\n);\n\nconst mat3 embossKernel = mat3(\n    vec3(-2, -1, 0),\n    vec3(-1,  1, 1),\n    vec3( 0,  1, 2)\n);\n\nconst mat3 gradientKernel = mat3(\n    vec3(-1, 0, 1),\n    vec3(-1, 0, 1),\n    vec3(-1, 0, 1)\n);\n\nconst mat3 weirdKernel = mat3(\n    vec3(-1, -2, -1),\n    vec3( 0,  0,  0),\n    vec3( 1,  2,  1)\n);\n\nvec3 conv(mat3 h, mat3 imgVal[3]);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv.y *= -1.0;\n    vec3 texture = texture2D(iChannel0, uv).rgb;\n    \n    mat3 imgVal[3];\n    for (float x = -1.0; x < 2.0; x++)\n    {\n        mat3 val;\n        for (float y = -1.0; y < 2.0; y++)\n        {\n            vec2 pos = vec2(fragCoord.x + x, fragCoord.y + y);\n            vec3 pixelVal = texture2D(iChannel0, pos.xy \/ iResolution.xy).rgb;\n            \n            val[int(y) + 1] = pixelVal;\n        }\n        \n        imgVal[int(x) + 1] = val;\n    }\n    \n    fragColor = vec4(conv(edgeKernel, imgVal), 1.0);\n}\n\nvec3 conv(mat3 h, mat3 imgVal[3])\n{\n    vec3 result;\n    for (int x = 0; x < 3; x++)\n        for (int y = 0; y < 3; y++)\n            result += (h[x][y] * imgVal[x][y]) * strength;\n    \n    return result;\n}\n","name":"","description":"","type":"image"}]}}