{"Shader":{"ver":"0.1","info":{"id":"ltK3Rz","date":"1472882125","viewed":48,"name":"\u03a3\u03c6\u03c3\u03c4\u0393\u03b1\u00b5 xD","username":"Imsure1200q_1UWE130","description":"serf","likes":0,"published":3,"flags":0,"tags":["pallete"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"float hit(vec3 p, vec3 r, float s)\n{\n    float t = length(min(p, r)) - 1.0;\n    vec3 q = normalize(vec3(r \/ fract(sin(p) - 0.172)));\n    vec3 h = q - t * clamp(p.z, p.x, q.y);\n    return length(q-h) \/ length(dot(p, r)) \/ t - s;\n}\nfloat A(float x, float y, float z)\n{\n    float a = smoothstep(z, y, x);\n    float b = clamp(z, y, x);\n    return step(a, b);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec3 p = vec3(cos(iGlobalTime), sin(iGlobalTime), tan(iGlobalTime))+length(uv)*normalize(vec3(uv, 1.0));\n    vec3 r = vec3(length(sqrt(uv)));\n    float x = hit(p, r, 0.0);\n\tfragColor = vec4(uv.x+x, uv.y+x, 1.0+x, 1.0) + A(dot(uv, vec2(x - uv.x, x - uv.y)), 0.0, 9.0);\n}","name":"Image","description":"","type":"image"}]}}