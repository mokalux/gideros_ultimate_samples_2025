{"Shader":{"ver":"0.1","info":{"id":"ltXXDS","date":"1439323129","viewed":75,"name":"Car Swiper alpha map","username":"kroltan","description":"Concept to demonstrate an alpha map to a friend.\nContents of Buf A copied from https:\/\/www.shadertoy.com\/view\/Md3XWn, according to @FabriceNeyret2's suggestion. Change the main buffer's iChannel0 for something else to disable it.","likes":1,"published":3,"flags":32,"tags":["procedural","2d","alpha"],"hasliked":0},"renderpass":[{"inputs":[{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"#define tau 6.283185307179586476925286766559\n\n#define center vec2(0.5, 0.0)\n#define radius 0.5\n#define speed 0.5\n\nfloat timed_angle(vec2 pos, float rawtime) {\n    float anglePercent = atan(pos.y, pos.x) \/ tau + 0.5;\n    float time = mod(rawtime, 3.0) - 1.0;\n    return mod(anglePercent + time, 1.0);\n}\n\nvec4 swiper(vec2 uv) {\n    vec2 pos = uv - center;\n    \n    if (length(pos) < radius && pos.y > 0.0) {\n        float t = iGlobalTime * speed;\n        float angle = timed_angle(pos, t);\n        float antiangle = 1.0 -timed_angle(pos, -t);\n        return vec4(1,1,1,1.0) * angle * antiangle;\n    } else {\n        return vec4(1,1,1,1);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec4 tex = texture2D(iChannel0, uv);\n    vec4 texN = texture2D(iChannel1, uv);\n    float ratio = iResolution.x \/ iResolution.y;\n    fragColor = mix(tex, texN,swiper(uv).w);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":257,"channel":0}],"code":"#define SCALE 2.\n#define SWIRL 1\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    O -= O;\n    float s=0., s2=0., t=iGlobalTime; \n\tU = U\/iResolution.xy -.5;\n    U.x += .03*sin(3.14*t);\n    float sc = pow(SCALE,-mod(t,2.)-.8);\n    U *= sc;\n    \n    for (int i=0; i<10; i++) {\n        vec2 V = abs(U+U); \n        if (max(V.x,V.y)>1.) break;\n        V = smoothstep(1.,.5,V);\n        float m = V.x*V.y;\n\t    O = mix(O,texture2D(iChannel0,U+.5),m);\n      \/\/O = mix(O,texture2D(iChannel0,U+.5,(sc *= 2.)*.15),m);  \/\/ Andre's blurred version\n      \/\/O = mix(O,texture2D(iChannel0,U+.5,sqrt((sc *= 2.)*.3)),m); \/\/   ...\n        s = mix(s,1.,m); s2 = s2*(1.-m)*(1.-m) + m*m;\n        U*=SCALE; \n#if SWIRL\n        U.x=-U.x;\n#endif\n    }\n    \n    vec4 mean = texture2D(iChannel0,U,10.);\n    O = mean + (O-s*mean)\/sqrt(s2); \n}","name":"Buf A","description":"","type":"buffer"}]}}