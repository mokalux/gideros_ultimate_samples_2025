{"Shader":{"ver":"0.1","info":{"id":"XsdXWn","date":"1458729833","viewed":301,"name":"texture advection: 3 phased","username":"FabriceNeyret2","description":"Combining 3 phased regenerated texture maintains a constant contrats.\nIn the case of deformation, this also allows to keep the pattern unstretched.","likes":5,"published":3,"flags":0,"tags":["texture","advection"],"hasliked":0},"renderpass":[{"inputs":[{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":28,"src":"\/presets\/tex15.png","ctype":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ cf https:\/\/hal.inria.fr\/inria-00537472  ( also exist in Lagrangian form )\n\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    float t = mod(iGlobalTime,6.283);\n\tvec2 uv = U \/ iResolution.xy - .5;\n    \n    O-=O;\n    \n    for (float i=0.; i<3.; i++) {\n        float ti = t+ 6.283\/3.*i,\n              wi = (.5-.5*cos(ti))\/1.5,\n              v = 3.\/(.01+length(uv));\n        vec2 uvi = uv*rot(.3*(-.5+fract(ti\/6.283))*v);\n        \/\/if (i>0.) break;\/\/ else wi=1.; \/\/ uncomment to show smearing \/ trick with 1 layer\n        if (uv.x < 0.)\n\t        O += texture2D(iChannel0, .5 + uvi )  * wi;\n\t    else\n            O[int(i)] += texture2D(iChannel1, .5 + uvi ).x  * wi;  \/\/ show each phase in colors\n    }\n}","name":"Image","description":"","type":"image"}]}}