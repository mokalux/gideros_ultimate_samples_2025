{"Shader":{"ver":"0.1","info":{"id":"XsBSDR","date":"1410632473","viewed":1280,"name":"Cube map to equirectangular map","username":"BeRo","description":"Cube map to equirectangular map converter example","likes":4,"published":3,"flags":0,"tags":["cubemap","equirectangularmap"],"hasliked":0},"renderpass":[{"inputs":[{"id":24,"src":"\/presets\/cube02_0.jpg","ctype":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 texCoord = fragCoord.xy \/ iResolution.xy; \n    vec2 thetaphi = ((texCoord * 2.0) - vec2(1.0)) * vec2(3.1415926535897932384626433832795, 1.5707963267948966192313216916398); \n    vec3 rayDirection = vec3(cos(thetaphi.y) * cos(thetaphi.x), sin(thetaphi.y), cos(thetaphi.y) * sin(thetaphi.x));\n\tfragColor = textureCube(iChannel0, rayDirection);\n    \/\/ for apply the equirectangular map like a cubemap:\n    \/\/ rayDirection = normalize(rayDirection);\n    \/\/ texture(uTexEnvMap, vec2((atan(rayDirection.z, rayDirection.x) \/ 6.283185307179586476925286766559) + 0.5, acos(rayDirection.y) \/ 3.1415926535897932384626433832795));    \n}","name":"Image","description":"","type":"image"}]}}