{"Shader":{"ver":"0.1","info":{"id":"Mtd3WM","date":"1469713345","viewed":197,"name":"colors (spectrum+volume)","username":"FabriceNeyret2","description":"metameric colors as https:\/\/www.shadertoy.com\/view\/Xlt3D7\nintegrated in depth as https:\/\/www.shadertoy.com\/view\/XldGDM\nfrom bottom to top:\n1 peak at green, 2 peaks around green, box around green, cos around green, 2 peaks at +-pi\/3, 1 peak + const","likes":2,"published":3,"flags":0,"tags":["volume","spectrum","tutorial","fluid","color","metameric"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/ following https:\/\/www.shadertoy.com\/view\/Xlt3D7\n\/\/ refs: https:\/\/en.wikipedia.org\/wiki\/Metamerism_(color)\n\/\/       https:\/\/en.wikipedia.org\/wiki\/Trichromacy\n\n\/\/ for simplicity, cone response is approximated by (1 + cos(3.14*(f-f0) )\/2.\n\/\/                                                  with f0 = -2\/3, 0, 2\/3\n\/\/ f in [-1 (red) , 1 (violet) ]\n\/\/ perception = int( colorSpectrum(f) * coneResponse(f) )\/2.\n\n\/\/ ATTENTION:\n\/\/ - there might still be some normalization bug ;-)\n\/\/ - prev shader is more about surface color while this one is about volumes\n\n  #define T0 .8   \/\/ max transp. No pure transp is more realistic\n\/\/#define T0 1.   \/\/ transp=1. ease comparison with prev shader\n\n#define RGB(f, fc) ( .5 + .5* cos(3.14*(f-(fc)) ) )\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    O -= O;\n    vec2 R = iResolution.xy;\n    U \/= R;\n    float y = 6.*U.y, a = fract(y), pa=3.14*a, f, z = 4.*U.x, I;\n    if (a < 6.\/R.y) return;\n    if (abs(z-1.)<4.\/R.x) { O.g++; return;}           \/\/ unit length of depth\n\n#define N 50.                                         \/\/ spectrum sampling rate\n#define EQ(f,a) ( abs(f-(a)) < .5\/N )\n    \n    for (float i=0.; i<3.; i+=1.\/N) {\n        f = i-1.;                                     \/\/ --- color spectrum (normalized):\n        I =   y > 5. ?   EQ(f,0.) ? 1. : a\/2.\/N          \/\/ 1 peak + const a\n            : y > 4. ?   EQ(abs(f), 1.\/3.) ? 1. : 0.     \/\/ 2 peaks around green\n            : y > 3. ?   .5 + .5*cos(3.14*f)             \/\/ cos around green\n            : y > 2. ?   abs(f) <  a\/1.  ? 1. : 0.       \/\/ box around green\n            : y > 1. ?   EQ(abs(f),a\/2.) ? 1. : 0.       \/\/ 2 peaks around green\n            :            EQ(f,0.) ? 1. : 0.;             \/\/ 1 peak at green\n        I *= T0;                                      \/\/ max transparency\n        I = pow(I, z);                                \/\/ depth extinction\n        O[0] += I * RGB(f, -2.\/3.);                   \/\/ perceptive integration\n        O[1] += I * RGB(f,  0.   );\n        O[2] += I * RGB(f,  2.\/3.);\n    }\n    \n    \/\/ tone mapping using iso intensity for 1 unit length of spectrum\n    O \/=   y > 5. ?   1.+a          \/\/ 1 peak + const a\n         : y > 4. ?   2.            \/\/ 2 peaks around green\n         : y > 3. ?   N             \/\/ cos around green\n         : y > 2. ?   2.*a\/1.*N     \/\/ box around green\n         : y > 1. ?   2.            \/\/ 2 peaks around green\n         :            1.;           \/\/ 1 peak at green       \n\n    \/\/ O \/= max(O.r,max(O.g,O.b)); \/\/ chrominance only\n}","name":"Image","description":"","type":"image"}]}}