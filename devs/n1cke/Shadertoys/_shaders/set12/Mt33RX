{"Shader":{"ver":"0.1","info":{"id":"Mt33RX","date":"1470495309","viewed":150,"name":"[skdc] original WRE","username":"Imsure1200q_1UWE130","description":"skdc: Some Kind of DisCo","likes":0,"published":3,"flags":0,"tags":["skdc"],"hasliked":0},"renderpass":[{"inputs":[{"id":28,"src":"\/presets\/tex15.png","ctype":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"float rand( float i )\n{\n     return i == 0. ? 0.\n         : i > .5 ? tan(fract(i)\/sqrt(i))\n         : i > .8 ? sqrt(acos(asin(i)\/i)*i)\n         : i > 1. ? sqrt(i)\n         : length(i);\n}\nfloat h(vec2 s)\n{\n    vec2 p = floor(s);\n    vec2 f = fract(s);\n    float t = float(mat2(p, -f));\n    return float(sin(fract(p - f * t) \/ s[0]));\n}\nfloat s(float i, vec2 k)\n{\n    float x = i * h(mod(k, i-k));\/*(i * h(vec2(mod(k.x, i\/k.x)), (i * mod(k.y, i\/k.y))))*\/;\n    float f = mod(i, x);\n    float p = max(i, f\/dot(k.x + k.y, x));\n    vec2 t = vec2(mat2((p), (x*f), fract(x*f), (p))); \/\/Remind Me If This Doesn't Compile. Im Using Chrome.\n    float dx = t.x \/ t.y * i;\n    float dy = dot(dx, x\/p);\n    return dy \/ float(dot(k, t));\/\/* h(-t);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec4 co1 = smoothstep(0.2, rand(tan(sin(iGlobalTime))), vec4(texture2D(iChannel0, uv*2.0).gbr, 1.0));\n    vec4 co2 = vec4(normalize(vec3(uv, fract(iGlobalTime))) + co1.rgb, 1.0);\n    co2 *= length(co2);\n    fragColor = vec4(s(float(mat2(h(uv + vec2(float(co1), float(co2))),\n                     h(uv + vec2(float(-co1), float(co2))),\n                     h(uv + vec2(float(co1), float(-co2))),\n                     h(uv + vec2(float(-co1), float(-co2))))\n                     )\/log(uv.x), uv));\n   ;\n}","name":"Image","description":"","type":"image"}]}}