{"Shader":{"ver":"0.1","info":{"id":"Mtc3DN","date":"1469272278","viewed":122,"name":"awe","username":"Imsure1200q_1UWE130","description":"ae","likes":0,"published":3,"flags":0,"tags":["ae"],"hasliked":0},"renderpass":[{"inputs":[{"id":13,"src":"\/presets\/mzk00.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"vec4 quill( vec4 color, float s, vec2 c )\n{\n    float t = (color.x \/ color.y \/ color.z) * s;\n    vec4 h;\n    for(int i = 0; i < 24; i++)\n    {\n        float p = t + 0.1 \/ t;\n        float d = sqrt(p*distance(c.xy,c.yx));\n        h = vec4(d \/ p * fwidth(dFdx(p)\/dFdy(p)),vec2(inversesqrt(c.x)),1.0);\n        t += d * (iMouse.x \/ iMouse.y);\n    }\n    return vec4(h.xyz,t);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec4 color1 = vec4(uv,0.5+0.5*sin(iGlobalTime),1.0);\n    vec4 squish = quill(color1, float(sin(color1.x)), uv);\n    vec4 fcs = vec4(squish.x);\n    vec4 color2 = vec4(uv,sin(iGlobalTime),1.0);\n    vec4 wave = quill(color2, fract(sin(iGlobalTime)), uv.yx);\n    fragColor = mix(mix(wave,vec4(vec2(mat2(uv,uv)),vec2(mat2(uv,uv))),2.0),texture2D(iChannel0,uv),2.0);\n}","name":"Image","description":"","type":"image"}]}}