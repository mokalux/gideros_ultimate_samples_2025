{"Shader":{"ver":"0.1","info":{"id":"Mtt3Rr","date":"1467757454","viewed":452,"name":"drl011 (glitch)","username":"DrLuke","description":"Using HSV angle and saturation to move uv coordinate","likes":7,"published":3,"flags":0,"tags":["glitch","hsv"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\n#define SIN01(a) (sin(a)*0.5 + 0.5)\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 \/ 3.0, 2.0 \/ 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) \/ (6.0 * d + e)), d \/ (q.x + e), q.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    vec3 hsv = rgb2hsv(texture2D(iChannel0, uv).rgb);\n    \n    float angle = hsv.x + atan(uv.y, uv.x) + iGlobalTime*0.1;\n    mat2 RotationMatrix = mat2( cos( angle ), -sin( angle ), sin( angle ),  cos( angle ));\n    vec3 col = texture2D(iChannel0, uv + RotationMatrix * vec2(log(max(SIN01(iGlobalTime*0.7)-0.2, 0.)*0.2 + 1.  ),0) * hsv.y).rgb;\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}}