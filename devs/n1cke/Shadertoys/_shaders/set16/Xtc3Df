{"Shader":{"ver":"0.1","info":{"id":"Xtc3Df","date":"1471961548","viewed":209,"name":"Outline shader?","username":"CaptCM74","description":"From \"Let it glow!\" by Micha, aka \"Germanunkol\".\nURL - http:\/\/blogs.love2d.org\/content\/let-it-glow-dynamically-adding-outlines-characters\n","likes":1,"published":3,"flags":32,"tags":["outline"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":258,"src":"\/presets\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"\/\/CHANGE IT IF YOU DARE!\n#define treshold 0.4\n\n\/\/From \"Let it glow!\" by Micha, aka \"Germanunkol\".\n\/\/Link - http:\/\/blogs.love2d.org\/content\/let-it-glow-dynamically-adding-outlines-characters\n\/\/Runs 25~50 FPS on my PC. \n\n\n\/\/Buffer A - Make it Black n' white\n\/\/Buffer B - Use the technique From link above to make \"Outline\"\n\/\/This - Merge original image and expanded \"Outline\"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n   \tfloat uranus = texture2D(iChannel0,uv).x;\n    \n    \/\/Bulge things.\n    uranus += texture2D(iChannel0,uv+vec2(0.001,0.0)).x\/4.;\n    uranus += texture2D(iChannel0,uv+vec2(-0.001,0.0)).x\/4.;\n    uranus += texture2D(iChannel0,uv+vec2(0.,0.001)).x\/4.;\n    uranus += texture2D(iChannel0,uv+vec2(0.,-0.001)).x\/4.;\n    \n    \/\/And threshold again.\n    if (uranus > treshold)\n    {\n    uranus = 1.;\n    }\n    else\n    {\n    uranus = 0.;\n    }\n    \/\/ The original picture\n    vec4 col = texture2D(iChannel1,vec2(uv.x,uv.y));\n    \/\/Use the value above to make shitty, And cheap \"Outline\"\n    col *= vec4(vec3(1. - uranus),1.);\/\/Inverse (1 - x) the White outline to make it black.\n    \n    \/\/BOOM\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":257,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec4 street = texture2D(iChannel0,uv);\n    float lum = (street.x + street.y + street.z)\/3.;\n    \n    fragColor = vec4(vec3(lum),1.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":258,"channel":0}],"code":"#define tres 0.16\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n   \tfloat algore = 8.*texture2D(iChannel0,uv).x;\n    \n    \/\/b0rf\n    algore -= texture2D(iChannel0,vec2(uv.x-0.001,uv.y)).x;\n    algore -= texture2D(iChannel0,vec2(uv.x+0.001,uv.y)).x;\n    algore -= texture2D(iChannel0,vec2(uv.x,uv.y-0.001)).x;\n    algore -= texture2D(iChannel0,vec2(uv.x,uv.y+0.001)).x;\n    algore -= texture2D(iChannel0,vec2(uv.x-0.002,uv.y)).x;\n    algore -= texture2D(iChannel0,vec2(uv.x+0.002,uv.y)).x;\n    algore -= texture2D(iChannel0,vec2(uv.x,uv.y-0.002)).x;\n    algore -= texture2D(iChannel0,vec2(uv.x,uv.y+0.002)).x;\n    \n     if (algore > tres)\n    {\n    algore = 1.;\n    }\n    else\n    {\n    algore = 0.;\n    }\n    \n    \n    \n    fragColor = vec4(vec3(algore),1.0);\/\/col;\n}","name":"Buf B","description":"","type":"buffer"}]}}