{"Shader":{"ver":"0.1","info":{"id":"XttGDX","date":"1472091272","viewed":91,"name":"Basic Cel Shading","username":"jackdavenport","description":"A simple scene with (my attempt) of cel shading applied.","likes":0,"published":3,"flags":0,"tags":["cartoon","texture","lighting","shading","raymarcher","toon","cel"],"hasliked":0},"renderpass":[{"inputs":[{"id":3,"src":"\/presets\/tex02.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":22,"src":"\/presets\/cube00_0.jpg","ctype":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"#define DEFAULT_CEL_STEPS 5.\n\nfloat dstScene(vec3 p) {\n\tfloat dst = length(p)-1.;\n    dst = min(dst, length(max(abs(vec3(0.,0.,5.6)-p)-vec3(6.,3.,1.),0.)));\n    return dst;\n}\n\nfloat cel(float x, float steps) {\n    return floor(x*steps)\/steps;\n}\nfloat cel(float x) {\n    return cel(x, DEFAULT_CEL_STEPS);\n}\nvec3 cel(vec3 v, float steps) {\n\treturn floor(v*steps)\/steps;\n}\n\nvec3 getLightVector(vec3 p) {\n    float t = iGlobalTime * 2.5;\n\treturn vec3(cos(t),0.,sin(t))*4. - p;\n}\n\nfloat raymarch(vec3 ori, vec3 dir) {\n    float t = 0.;\n    for(int i = 0; i < 256; i++) {\n    \tfloat dst = dstScene(ori+dir*t);\n        if(dst < .001 || t > 256.)\n            break;\n        t += dst * .75;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - iResolution.xy * .5) \/ iResolution.y;\n    \n    vec3 ori = vec3(sin(4.+iGlobalTime*.5)*2.5,0.,-3.);\n    vec3 dir = vec3(uv, 1.);\n    \n    if(iMouse.z > 0.) ori.x = 2.5*-((iMouse.x\/iResolution.x)*2.-1.);\n    \n    vec3 f = normalize(-ori);\n    vec3 u = normalize(cross(f, vec3(0.,1.,0.)));\n    vec3 v = normalize(cross(u, f));\n    dir = mat3(u,v,f)*dir;\n    \n    dir = normalize(dir);\n    \n    float t  = raymarch(ori,dir);\n    vec3 col = cel(textureCube(iChannel1,dir).xyz, 16.);\n    \n    if(t < 256.) {\n        vec2 e = vec2(.001,0.);\n        vec3 p = ori+dir*t;\n   \t\tvec3 n = vec3(dstScene(p+e.xyy)-dstScene(p-e.xyy),\n                      dstScene(p+e.yxy)-dstScene(p-e.yxy),\n                      dstScene(p+e.yyx)-dstScene(p-e.yyx));\n        n = normalize(n);\n        vec3 r = normalize(reflect(dir,n));\n        \n        vec3 lv = getLightVector(p);\n        vec3 ld = normalize(lv);\n        float d = cel(max(dot(ld,n),0.));\n        float s = cel(pow(max(dot(ld,r),0.),30.));\n        \n        if(raymarch(p+ld*.01,ld) < length(lv))\n            d = s = 0.;\n        \n        vec2 uv = p.xy;\n        if(p.z < 3.) {\n            uv = asin(n.xy)\/3.14159+.5;\n        }\n        col = cel(texture2D(iChannel0,uv).xyz,8.)*(.4+d)+s;\n    }\n    \n    vec3 lv = getLightVector(ori);\n    vec3 ld = normalize(lv);\n    float s = 1.;\n    if(raymarch(ori,ld) < length(lv)) {\n    \ts = 0.;   \n    }\n    col += cel(pow(max(dot(ld,dir),0.),60.), 16.)*s;\n    \n\tfragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}}