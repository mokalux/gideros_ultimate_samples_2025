{"Shader":{"ver":"0.1","info":{"id":"Xt3GzX","date":"1470416434","viewed":267,"name":"Quotidian","username":"ivansafrin","description":"#shaderaday #2","likes":3,"published":3,"flags":0,"tags":["sun","moon","shaderaday"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"#define PI 3.14159265359 \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.y;\n    float reflectVal = 0.0;\n    if(uv. y < 0.35) {\n        reflectVal = 0.35-(0.35-uv.y);\n        uv.y = 0.35 + (0.35-uv.y);\n        uv.x += sin(iGlobalTime+(uv.y* 130.0)) * 0.01;\n    }\n    vec2 sunC = vec2((0.5 * iResolution.x\/iResolution.y) + cos(iGlobalTime)*0.5\n                         , 0.5 + sin(iGlobalTime)*0.4);\n    vec2 moonC = vec2((0.5 * iResolution.x\/iResolution.y) + cos(iGlobalTime+PI)*0.5\n                      , 0.5 + sin(iGlobalTime+PI)*0.4);  \n\tfragColor = vec4(0.05, 0.1, sunC.y, 1.0) +\n        (vec4(1.0, 0.2, 0.0, 1.0) * ((distance(uv, sunC) < 0.06)  ? 1.0 : 0.0))+\n        (vec4(1.0, 0.2+ (abs(sin(iGlobalTime)) * 0.8), 0.0, 1.0) * (1.0-distance(uv, sunC) * abs(sin(iGlobalTime-PI)) * 3.0) * 1.5\n        *(0.5 + sin(iGlobalTime)*0.5))+\n        (vec4(0.8, 0.6, 0.8, 1.0) * ((distance(uv, moonC) < 0.04)  ? 1.0 : 0.0))\n        + (vec4(1.0, 0.3, 0.0, 1.0) * reflectVal);\n}","name":"Image","description":"","type":"image"}]}}