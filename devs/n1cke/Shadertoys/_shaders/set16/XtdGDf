{"Shader":{"ver":"0.1","info":{"id":"XtdGDf","date":"1472127126","viewed":115,"name":"WAVES","username":"Imsure1200q_1UWE130","description":"WAVES","likes":0,"published":3,"flags":0,"tags":["waves"],"hasliked":0},"renderpass":[{"inputs":[{"id":3,"src":"\/presets\/tex02.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"id":37,"channel":0}],"code":"vec3 b( vec2 p, float s )\n{\n    vec2 x = smoothstep(vec2(s), p\/2.0, p\/5.0);\n    vec3 q = normalize(vec3(x, 1.0));\n    vec3 i = vec3(x, q.z\/q.x);\n    float k = length(sqrt(s));\n    return abs(sin(q-i*k)) - clamp(q.x, q.z, s\/k);\n}\nvec2 i( vec2 p, float s, float s2 )\n{\n    float x = smoothstep(float(p), s, s2\/s);\n    vec2 q = p \/ x * distance(s, s2);\n    vec3 pos = b(p, s);\n    float pSep = max(min(pos.x, pos.z), min(pos.y, pos.z));\n    return q + pSep * (iGlobalTime \/ 2.0) \/ pos.xy;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    if(uv.y >= 0.4\/length(texture2D(iChannel0, i(uv, 2.0, 3.0)))){\n        fragColor = vec4(cos(uv.y)) + vec4(-0.025, 0.025, 0.6, 0.5);\n        fragColor += texture2D(iChannel1, vec2(uv.x * 1.01 + (iGlobalTime \/ 60.0), uv.y* 5.0) )  - 0.8 + 0.4;\n    }\n    else fragColor = vec4(tan(uv.y)) + vec4(-0.025, 0.025, 0.6, 0.5);\n}","name":"Image","description":"","type":"image"}]}}