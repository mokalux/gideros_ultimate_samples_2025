{"Shader":{"ver":"0.1","info":{"id":"XtjXRD","date":"1442067847","viewed":252,"name":"2d plasma waves - public_int_i","username":"public_int_i","description":"plasma effect that I'm using for my js13k game","likes":8,"published":3,"flags":0,"tags":["2d","plasma"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/Ethan Alexander Shulman 2015\n\n#define iterations 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\n\tfloat res = 1.;\n    for (int i = 0; i < iterations; i++) {\n        res += cos(uv.y*12.345 - iGlobalTime*4. + cos(res*12.234)*.2 + cos(uv.x*32.2345 + cos(uv.y*17.234)) ) + cos(uv.x*12.345);\n    }\n        \n\tvec3 c = mix(vec3(1.,0.,0.),\n                 vec3(.6,.2,.2),\n                 cos(res+cos(uv.y*24.3214)*.1+cos(uv.x*6.324+iGlobalTime*4.)+iGlobalTime)*.5+.5);\n    \n    c = mix(c,\n            vec3(0.),\n            clamp( (length(uv-.5 + cos(iGlobalTime+uv.yx*4.34+uv.xy*res)*.1 )*5.-.4) , 0., 1.) );\n    \n    fragColor = vec4(c,1.);\n}","name":"Image","description":"","type":"image"}]}}